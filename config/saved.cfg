// automatically written on exit, DO NOT MODIFY
// delete this file to have config/default.cfg overwrite these settings
// modify settings in game, or put settings in config/autoexec.cfg to override anything

name "unnamed"

loadcrosshair "media\interface\crosshair\default.png" 0

.UI_taskbar ""
.UI_useimg 1
.autosortservers 1
.cci_showbots 1
.cci_showself 1
.cci_showspec 1
.cmc_from ""
.cmc_to ""
.crosshairsize 15
.entediting 1
.followlist ""
.followplayer 0
.hidehud 0
.mb_selectedmap "ac2"
.mb_showmaplist 0
.ps_model 0
.ps_team 0
.ps_weapon 1
.savemapname ""
.sb_connectid ""
.sb_mm 0
.sb_mode 0
.sb_ping 9999
.sb_players_e 0
.sb_players_f 0
.sb_showfilters 0
.selectedmap ""
.serverpassw ""
.showmaplist 1
.showmat 1
aaenvmap 1
aniso 0
ao 1
aobilateral 3
aobilateraldepth 4.0
aobilateralupscale 0
aoblur 4
aofloatdepth 1
aoiter 0
aoprec 1
aoreduce 1
aotaps 5
applydialog 1
aspect 0.0
autoauth 1
autocompactvslots 256
autosortservers 1
autoupdateservers 1
blendbrushcolour 192
blendtexsize 9
blood 1
bloomblur 7
bloomiter 0
bloomprec 2
bloomscale 1.0
bloomsize 9
caustics 1
clockerror 1000000
clockfix 0
compresspng 9
compresstga 1
confade 30
confilter 3327
confirmoverwrite 1
confirmquit 0
connectname "195.154.128.64"
connectport 42000
conscale 0.33
consize 5
crosshaircolors 1
crosshairfx 1
crosshairsize 15
cursorsize 15
damagecompass 1
damagecompassalpha 25
damagecompassfade 1000
damagecompassmax 200
damagecompassmin 25
damagecompasssize 30
damagescreen 1
damagescreenalpha 45
damagescreenfactor 75
damagescreenfade 1000
damagescreenmax 100
damagescreenmin 10
deadpush 3
deathscore 1
dynlightdist 1024
dynlights 1
emitmillis 17
envmapsize 7
explicitskycolour 8388736
fewparticles 100
filltjoints 1
flarecutoff 1000
flaresize 100
forceplayermodels 0
fov 100
fullbrightmodels 0
fullconfilter 16777215
fullconsize 75
fxaa 0
fxaagreenluma 0
fxaaquality 1
gamma 100
gi 1
glassenv 1
glineardepth 1
gpuskel 1
grass 1
grassdist 256
grassheight 4
grassstep 2.0
grasstaper 0.2
gscale 100
gscalecubic 0
gscalecubicsoft 0.0
gscalenearest 0
hdrgamma 2.0
hdrprec 2
hidedead 0
highlightscore 1
hitcrosshair 425
hitsound 0
hudgun 1
hudgunsway 1
invmouse 0
maxcon 200
maxfps 125
maxhistory 1000
maxparticledistance 1024
maxparticles 4000
maxparticletextdistance 128
maxradarscale 1024
maxroll 0
maxservpings 10
maxsoundradius 340
maxsoundsatonce 7
maxstaindistance 512
maxstaintris 2048
maxtexsize 0
maxtrail 500
miniconfade 30
miniconfilter 768
miniconsize 5
miniconwidth 40
minimapalpha 1.0
minimapsize 8
minradarscale 384
modelist "edit rdm pdm rtdm ptdm rctf pctf"
mouseaccel 0.0
movieaccel 1
moviedir "movie"
moviefps 24
movieh 240
movieminquality 0.0
moviesound 1
moviesync 0
moview 320
msaa 0
msaalineardepth 1
msaatonemap 0
mumble 1
musicvol 60
nominimapcolour 1052688
nompedit 1
notepadpath "untitled.cfg"
outlinecolour 0
outlinemeters 0
particlebright 2.0
particlelayers 1
particlesize 100
particletext 1
playercolor 4
playercolorazul 0
playercolorrojo 0
playermodel 0
pvsthreads 0
radarteammates 1
ragdoll 1
ragdollfade 100
ragdollmillis 0
reducefilter 1
relativemouse 1
rhprec 0
rhtaps 20
rsmdepthprec 0
rsmprec 0
savebak 2
sbopaque 1
screenshotdir "screenshot"
screenshotformat 2
searchlan 1
sensitivity 10.0
sensitivityscale 100.0
servpingdecay 15
servpingrate 5
showclientnum 0
showconnecting 0
showdeaths 0
showfps 1
showfpsrange 0
showip 0
showkills 1
showmat 1
showminimap 1
showmodeinfo 1
showparticles 1
showping 1
showpj 0
showscore 1
showservinfo 1
showspectators 1
smaa 0
smaacoloredge 0
smaagreenluma 0
smaaquality 2
smaaspatial 1
smdepthprec 0
smfilter 2
smgather 0
smoothdist 32
smoothmove 75
smsize 12
softexplosion 1
softexplosionblend 16
softparticleblend 8
softparticles 1
soundpack ""
soundvol 255
spawnwait 0
specmode 0
stainfade 15
stains 1
teamcolorfrags 1
teamcolortext 1
teamcrosshair 1
testmaps "test_anim test_model"
texcompress 1536
texcompressquality -1
texreduce 0
textbright 92
tqaa 0
tqaaquincunx 1
uiscrollsteptime 50
uisensitivity 0.9
uislidersteptime 50
uislotviewtime 25
uitextrows 24
undomegs 5
usenp2 1
usermaps " ac2 steelribs test_ctf waterworks"
vertwater 1
volbilateral 1
volblur 1
volreduce 1
volsteps 12
volumetric 1
vsync 0
vsynctear 0
wallclock 0
wallclock24 0
wallclocksecs 0
waterenvmap 1
waterfallenv 1
waterlod 1
waterreflect 1
watersubdiv 2
zoomaccel 0.0
zoomautosens 1
zoomfov 42
zoominvel 40
zoomoutvel 50
zoomsens 4.5
zoomtoggle 0

bind "0" [keyswitch 0 :def:0 :cus:0]
bind "1" [keyswitch 1 :def:1 :cus:1]
bind "2" [keyswitch 2 :def:2 :cus:2]
bind "3" [keyswitch 3 :def:3 :cus:3]
bind "4" [keyswitch 4 :def:4 :cus:4]
bind "5" [keyswitch 5 :def:5 :cus:5]
bind "6" [keyswitch 6 :def:6 :cus:6]
bind "7" [keyswitch 7 :def:7 :cus:7]
bind "8" [keyswitch 8 :def:8 :cus:8]
bind "9" [keyswitch 9 :def:9 :cus:9]
bind "A" [keyswitch A :def:A :cus:A]
bind "B" [keyswitch B :def:B :cus:B]
bind "BACKQUOTE" [keyswitch BACKQUOTE :def:BACKQUOTE :cus:BACKQUOTE]
bind "BACKSLASH" [keyswitch BACKSLASH :def:BACKSLASH :cus:BACKSLASH]
bind "C" [keyswitch C :def:C :cus:C]
bind "CAPSLOCK" [keyswitch CAPSLOCK :def:CAPSLOCK :cus:CAPSLOCK]
bind "COMMA" [keyswitch COMMA :def:COMMA :cus:COMMA]
bind "D" [keyswitch D :def:D :cus:D]
bind "DELETE" [keyswitch DELETE :def:DELETE :cus:DELETE]
bind "DOWN" [keyswitch DOWN :def:DOWN :cus:DOWN]
bind "E" [keyswitch E :def:E :cus:E]
bind "END" [keyswitch END :def:END :cus:END]
bind "EQUALS" [keyswitch EQUALS :def:EQUALS :cus:EQUALS]
bind "ESCAPE" [keyswitch ESCAPE :def:ESCAPE :cus:ESCAPE]
bind "F" [keyswitch F :def:F :cus:F]
bind "F1" [keyswitch F1 :def:F1 :cus:F1]
bind "F10" [keyswitch F10 :def:F10 :cus:F10]
bind "F11" [keyswitch F11 :def:F11 :cus:F11]
bind "F12" [keyswitch F12 :def:F12 :cus:F12]
bind "F2" [keyswitch F2 :def:F2 :cus:F2]
bind "F3" [keyswitch F3 :def:F3 :cus:F3]
bind "F4" [keyswitch F4 :def:F4 :cus:F4]
bind "F5" [keyswitch F5 :def:F5 :cus:F5]
bind "F6" [keyswitch F6 :def:F6 :cus:F6]
bind "F7" [keyswitch F7 :def:F7 :cus:F7]
bind "F8" [keyswitch F8 :def:F8 :cus:F8]
bind "F9" [keyswitch F9 :def:F9 :cus:F9]
bind "G" [keyswitch G :def:G :cus:G]
bind "H" [keyswitch H :def:H :cus:H]
bind "HOME" [keyswitch HOME :def:HOME :cus:HOME]
bind "I" [keyswitch I :def:I :cus:I]
bind "INSERT" [keyswitch INSERT :def:INSERT :cus:INSERT]
bind "J" [keyswitch J :def:J :cus:J]
bind "K" [keyswitch K :def:K :cus:K]
bind "KP0" [keyswitch KP0 :def:KP0 :cus:KP0]
bind "KP1" [keyswitch KP1 :def:KP1 :cus:KP1]
bind "KP2" [keyswitch KP2 :def:KP2 :cus:KP2]
bind "KP3" [keyswitch KP3 :def:KP3 :cus:KP3]
bind "KP4" [keyswitch KP4 :def:KP4 :cus:KP4]
bind "KP5" [keyswitch KP5 :def:KP5 :cus:KP5]
bind "KP6" [keyswitch KP6 :def:KP6 :cus:KP6]
bind "KP7" [keyswitch KP7 :def:KP7 :cus:KP7]
bind "KP8" [keyswitch KP8 :def:KP8 :cus:KP8]
bind "KP9" [keyswitch KP9 :def:KP9 :cus:KP9]
bind "KP_DIVIDE" [keyswitch KP_DIVIDE :def:KP_DIVIDE :cus:KP_DIVIDE]
bind "KP_ENTER" [keyswitch KP_ENTER :def:KP_ENTER :cus:KP_ENTER]
bind "KP_MINUS" [keyswitch KP_MINUS :def:KP_MINUS :cus:KP_MINUS]
bind "KP_MULTIPLY" [keyswitch KP_MULTIPLY :def:KP_MULTIPLY :cus:KP_MULTIPLY]
bind "KP_PLUS" [keyswitch KP_PLUS :def:KP_PLUS :cus:KP_PLUS]
bind "L" [keyswitch L :def:L :cus:L]
bind "LALT" [keyswitch LALT :def:LALT :cus:LALT]
bind "LCTRL" [keyswitch LCTRL :def:LCTRL :cus:LCTRL]
bind "LEFT" [keyswitch LEFT :def:LEFT :cus:LEFT]
bind "LEFTBRACKET" [keyswitch LEFTBRACKET :def:LEFTBRACKET :cus:LEFTBRACKET]
bind "LMETA" [keyswitch LMETA :def:LMETA :cus:LMETA]
bind "LSHIFT" [keyswitch LSHIFT :def:LSHIFT :cus:LSHIFT]
bind "M" [keyswitch M :def:M :cus:M]
bind "MENU" [keyswitch MENU :def:MENU :cus:MENU]
bind "MINUS" [keyswitch MINUS :def:MINUS :cus:MINUS]
bind "MOUSEBACK" [keyswitch MOUSEBACK :def:MOUSEBACK :cus:MOUSEBACK]
bind "MOUSEFORWARD" [keyswitch MOUSEFORWARD :def:MOUSEFORWARD :cus:MOUSEFORWARD]
bind "MOUSELEFT" [keyswitch MOUSELEFT :def:MOUSELEFT :cus:MOUSELEFT]
bind "MOUSEMIDDLE" [keyswitch MOUSEMIDDLE :def:MOUSEMIDDLE :cus:MOUSEMIDDLE]
bind "MOUSERIGHT" [keyswitch MOUSERIGHT :def:MOUSERIGHT :cus:MOUSERIGHT]
bind "MOUSEWHEELDOWN" [keyswitch MOUSEWHEELDOWN :def:MOUSEWHEELDOWN :cus:MOUSEWHEELDOWN]
bind "MOUSEWHEELUP" [keyswitch MOUSEWHEELUP :def:MOUSEWHEELUP :cus:MOUSEWHEELUP]
bind "N" [keyswitch N :def:N :cus:N]
bind "NUMLOCK" [keyswitch NUMLOCK :def:NUMLOCK :cus:NUMLOCK]
bind "O" [keyswitch O :def:O :cus:O]
bind "P" [keyswitch P :def:P :cus:P]
bind "PAGEDOWN" [keyswitch PAGEDOWN :def:PAGEDOWN :cus:PAGEDOWN]
bind "PAGEUP" [keyswitch PAGEUP :def:PAGEUP :cus:PAGEUP]
bind "PAUSE" [keyswitch PAUSE :def:PAUSE :cus:PAUSE]
bind "PERIOD" [keyswitch PERIOD :def:PERIOD :cus:PERIOD]
bind "Q" [keyswitch Q :def:Q :cus:Q]
bind "QUOTE" [keyswitch QUOTE :def:QUOTE :cus:QUOTE]
bind "R" [keyswitch R :def:R :cus:R]
bind "RALT" [keyswitch RALT :def:RALT :cus:RALT]
bind "RCTRL" [keyswitch RCTRL :def:RCTRL :cus:RCTRL]
bind "RETURN" [keyswitch RETURN :def:RETURN :cus:RETURN]
bind "RIGHT" [keyswitch RIGHT :def:RIGHT :cus:RIGHT]
bind "RIGHTBRACKET" [keyswitch RIGHTBRACKET :def:RIGHTBRACKET :cus:RIGHTBRACKET]
bind "RSHIFT" [keyswitch RSHIFT :def:RSHIFT :cus:RSHIFT]
bind "S" [keyswitch S :def:S :cus:S]
bind "SCROLLOCK" [keyswitch SCROLLOCK :def:SCROLLOCK :cus:SCROLLOCK]
bind "SEMICOLON" [keyswitch SEMICOLON :def:SEMICOLON :cus:SEMICOLON]
bind "SLASH" [keyswitch SLASH :def:SLASH :cus:SLASH]
bind "SPACE" [keyswitch SPACE :def:SPACE :cus:SPACE]
bind "SYSREQ" [keyswitch SYSREQ :def:SYSREQ :cus:SYSREQ]
bind "T" [keyswitch T :def:T :cus:T]
bind "TAB" [keyswitch TAB :def:TAB :cus:TAB]
bind "U" [keyswitch U :def:U :cus:U]
bind "UP" [keyswitch UP :def:UP :cus:UP]
bind "V" [keyswitch V :def:V :cus:V]
bind "W" [keyswitch W :def:W :cus:W]
bind "X" [keyswitch X :def:X :cus:X]
bind "Y" [keyswitch Y :def:Y :cus:Y]
bind "Z" [keyswitch Z :def:Z :cus:Z]
specbind "0" [keyswitch 0 :sdef:0 :scus:0]
specbind "1" [keyswitch 1 :sdef:1 :scus:1]
specbind "2" [keyswitch 2 :sdef:2 :scus:2]
specbind "3" [keyswitch 3 :sdef:3 :scus:3]
specbind "4" [keyswitch 4 :sdef:4 :scus:4]
specbind "5" [keyswitch 5 :sdef:5 :scus:5]
specbind "6" [keyswitch 6 :sdef:6 :scus:6]
specbind "7" [keyswitch 7 :sdef:7 :scus:7]
specbind "8" [keyswitch 8 :sdef:8 :scus:8]
specbind "9" [keyswitch 9 :sdef:9 :scus:9]
specbind "A" [keyswitch A :sdef:A :scus:A]
specbind "B" [keyswitch B :sdef:B :scus:B]
specbind "BACKQUOTE" [keyswitch BACKQUOTE :sdef:BACKQUOTE :scus:BACKQUOTE]
specbind "BACKSLASH" [keyswitch BACKSLASH :sdef:BACKSLASH :scus:BACKSLASH]
specbind "C" [keyswitch C :sdef:C :scus:C]
specbind "CAPSLOCK" [keyswitch CAPSLOCK :sdef:CAPSLOCK :scus:CAPSLOCK]
specbind "COMMA" [keyswitch COMMA :sdef:COMMA :scus:COMMA]
specbind "D" [keyswitch D :sdef:D :scus:D]
specbind "DELETE" [keyswitch DELETE :sdef:DELETE :scus:DELETE]
specbind "DOWN" [keyswitch DOWN :sdef:DOWN :scus:DOWN]
specbind "E" [keyswitch E :sdef:E :scus:E]
specbind "END" [keyswitch END :sdef:END :scus:END]
specbind "EQUALS" [keyswitch EQUALS :sdef:EQUALS :scus:EQUALS]
specbind "ESCAPE" [keyswitch ESCAPE :sdef:ESCAPE :scus:ESCAPE]
specbind "F" [keyswitch F :sdef:F :scus:F]
specbind "F1" [keyswitch F1 :sdef:F1 :scus:F1]
specbind "F10" [keyswitch F10 :sdef:F10 :scus:F10]
specbind "F11" [keyswitch F11 :sdef:F11 :scus:F11]
specbind "F12" [keyswitch F12 :sdef:F12 :scus:F12]
specbind "F2" [keyswitch F2 :sdef:F2 :scus:F2]
specbind "F3" [keyswitch F3 :sdef:F3 :scus:F3]
specbind "F4" [keyswitch F4 :sdef:F4 :scus:F4]
specbind "F6" [keyswitch F6 :sdef:F6 :scus:F6]
specbind "F7" [keyswitch F7 :sdef:F7 :scus:F7]
specbind "F8" [keyswitch F8 :sdef:F8 :scus:F8]
specbind "F9" [keyswitch F9 :sdef:F9 :scus:F9]
specbind "G" [keyswitch G :sdef:G :scus:G]
specbind "H" [keyswitch H :sdef:H :scus:H]
specbind "HOME" [keyswitch HOME :sdef:HOME :scus:HOME]
specbind "I" [keyswitch I :sdef:I :scus:I]
specbind "INSERT" [keyswitch INSERT :sdef:INSERT :scus:INSERT]
specbind "J" [keyswitch J :sdef:J :scus:J]
specbind "K" [keyswitch K :sdef:K :scus:K]
specbind "KP0" [keyswitch KP0 :sdef:KP0 :scus:KP0]
specbind "KP1" [keyswitch KP1 :sdef:KP1 :scus:KP1]
specbind "KP2" [keyswitch KP2 :sdef:KP2 :scus:KP2]
specbind "KP3" [keyswitch KP3 :sdef:KP3 :scus:KP3]
specbind "KP4" [keyswitch KP4 :sdef:KP4 :scus:KP4]
specbind "KP5" [keyswitch KP5 :sdef:KP5 :scus:KP5]
specbind "KP6" [keyswitch KP6 :sdef:KP6 :scus:KP6]
specbind "KP7" [keyswitch KP7 :sdef:KP7 :scus:KP7]
specbind "KP8" [keyswitch KP8 :sdef:KP8 :scus:KP8]
specbind "KP9" [keyswitch KP9 :sdef:KP9 :scus:KP9]
specbind "KP_DIVIDE" [keyswitch KP_DIVIDE :sdef:KP_DIVIDE :scus:KP_DIVIDE]
specbind "KP_ENTER" [keyswitch KP_ENTER :sdef:KP_ENTER :scus:KP_ENTER]
specbind "KP_MINUS" [keyswitch KP_MINUS :sdef:KP_MINUS :scus:KP_MINUS]
specbind "KP_MULTIPLY" [keyswitch KP_MULTIPLY :sdef:KP_MULTIPLY :scus:KP_MULTIPLY]
specbind "KP_PLUS" [keyswitch KP_PLUS :sdef:KP_PLUS :scus:KP_PLUS]
specbind "L" [keyswitch L :sdef:L :scus:L]
specbind "LALT" [keyswitch LALT :sdef:LALT :scus:LALT]
specbind "LCTRL" [keyswitch LCTRL :sdef:LCTRL :scus:LCTRL]
specbind "LEFT" [keyswitch LEFT :sdef:LEFT :scus:LEFT]
specbind "LEFTBRACKET" [keyswitch LEFTBRACKET :sdef:LEFTBRACKET :scus:LEFTBRACKET]
specbind "LMETA" [keyswitch LMETA :sdef:LMETA :scus:LMETA]
specbind "LSHIFT" [keyswitch LSHIFT :sdef:LSHIFT :scus:LSHIFT]
specbind "M" [keyswitch M :sdef:M :scus:M]
specbind "MENU" [keyswitch MENU :sdef:MENU :scus:MENU]
specbind "MINUS" [keyswitch MINUS :sdef:MINUS :scus:MINUS]
specbind "MOUSEBACK" [keyswitch MOUSEBACK :sdef:MOUSEBACK :scus:MOUSEBACK]
specbind "MOUSEFORWARD" [keyswitch MOUSEFORWARD :sdef:MOUSEFORWARD :scus:MOUSEFORWARD]
specbind "MOUSELEFT" [keyswitch MOUSELEFT :sdef:MOUSELEFT :scus:MOUSELEFT]
specbind "MOUSEMIDDLE" [keyswitch MOUSEMIDDLE :sdef:MOUSEMIDDLE :scus:MOUSEMIDDLE]
specbind "MOUSERIGHT" [keyswitch MOUSERIGHT :sdef:MOUSERIGHT :scus:MOUSERIGHT]
specbind "MOUSEWHEELDOWN" [keyswitch MOUSEWHEELDOWN :sdef:MOUSEWHEELDOWN :scus:MOUSEWHEELDOWN]
specbind "MOUSEWHEELUP" [keyswitch MOUSEWHEELUP :sdef:MOUSEWHEELUP :scus:MOUSEWHEELUP]
specbind "N" [keyswitch N :sdef:N :scus:N]
specbind "NUMLOCK" [keyswitch NUMLOCK :sdef:NUMLOCK :scus:NUMLOCK]
specbind "O" [keyswitch O :sdef:O :scus:O]
specbind "P" [keyswitch P :sdef:P :scus:P]
specbind "PAGEDOWN" [keyswitch PAGEDOWN :sdef:PAGEDOWN :scus:PAGEDOWN]
specbind "PAGEUP" [keyswitch PAGEUP :sdef:PAGEUP :scus:PAGEUP]
specbind "PAUSE" [keyswitch PAUSE :sdef:PAUSE :scus:PAUSE]
specbind "PERIOD" [keyswitch PERIOD :sdef:PERIOD :scus:PERIOD]
specbind "Q" [keyswitch Q :sdef:Q :scus:Q]
specbind "QUOTE" [keyswitch QUOTE :sdef:QUOTE :scus:QUOTE]
specbind "R" [keyswitch R :sdef:R :scus:R]
specbind "RALT" [keyswitch RALT :sdef:RALT :scus:RALT]
specbind "RCTRL" [keyswitch RCTRL :sdef:RCTRL :scus:RCTRL]
specbind "RETURN" [keyswitch RETURN :sdef:RETURN :scus:RETURN]
specbind "RIGHT" [keyswitch RIGHT :sdef:RIGHT :scus:RIGHT]
specbind "RIGHTBRACKET" [keyswitch RIGHTBRACKET :sdef:RIGHTBRACKET :scus:RIGHTBRACKET]
specbind "RSHIFT" [keyswitch RSHIFT :sdef:RSHIFT :scus:RSHIFT]
specbind "S" [keyswitch S :sdef:S :scus:S]
specbind "SCROLLOCK" [keyswitch SCROLLOCK :sdef:SCROLLOCK :scus:SCROLLOCK]
specbind "SEMICOLON" [keyswitch SEMICOLON :sdef:SEMICOLON :scus:SEMICOLON]
specbind "SLASH" [keyswitch SLASH :sdef:SLASH :scus:SLASH]
specbind "SPACE" [keyswitch SPACE :sdef:SPACE :scus:SPACE]
specbind "SYSREQ" [keyswitch SYSREQ :sdef:SYSREQ :scus:SYSREQ]
specbind "T" [keyswitch T :sdef:T :scus:T]
specbind "TAB" [keyswitch TAB :sdef:TAB :scus:TAB]
specbind "U" [keyswitch U :sdef:U :scus:U]
specbind "UP" [keyswitch UP :sdef:UP :scus:UP]
specbind "V" [keyswitch V :sdef:V :scus:V]
specbind "W" [keyswitch W :sdef:W :scus:W]
specbind "X" [keyswitch X :sdef:X :scus:X]
specbind "Y" [keyswitch Y :sdef:Y :scus:Y]
specbind "Z" [keyswitch Z :sdef:Z :scus:Z]
editbind "0" [keyswitch 0 :edef:0 :ecus:0]
editbind "1" [keyswitch 1 :edef:1 :ecus:1]
editbind "2" [keyswitch 2 :edef:2 :ecus:2]
editbind "3" [keyswitch 3 :edef:3 :ecus:3]
editbind "4" [keyswitch 4 :edef:4 :ecus:4]
editbind "5" [keyswitch 5 :edef:5 :ecus:5]
editbind "6" [keyswitch 6 :edef:6 :ecus:6]
editbind "7" [keyswitch 7 :edef:7 :ecus:7]
editbind "8" [keyswitch 8 :edef:8 :ecus:8]
editbind "9" [keyswitch 9 :edef:9 :ecus:9]
editbind "A" [keyswitch A :edef:A :ecus:A]
editbind "B" [keyswitch B :edef:B :ecus:B]
editbind "BACKQUOTE" [keyswitch BACKQUOTE :edef:BACKQUOTE :ecus:BACKQUOTE]
editbind "BACKSLASH" [keyswitch BACKSLASH :edef:BACKSLASH :ecus:BACKSLASH]
editbind "C" [keyswitch C :edef:C :ecus:C]
editbind "CAPSLOCK" [keyswitch CAPSLOCK :edef:CAPSLOCK :ecus:CAPSLOCK]
editbind "COMMA" [keyswitch COMMA :edef:COMMA :ecus:COMMA]
editbind "D" [keyswitch D :edef:D :ecus:D]
editbind "DELETE" [keyswitch DELETE :edef:DELETE :ecus:DELETE]
editbind "DOWN" [keyswitch DOWN :edef:DOWN :ecus:DOWN]
editbind "E" [keyswitch E :edef:E :ecus:E]
editbind "END" [keyswitch END :edef:END :ecus:END]
editbind "EQUALS" [keyswitch EQUALS :edef:EQUALS :ecus:EQUALS]
editbind "ESCAPE" [keyswitch ESCAPE :edef:ESCAPE :ecus:ESCAPE]
editbind "F" [keyswitch F :edef:F :ecus:F]
editbind "F1" [keyswitch F1 :edef:F1 :ecus:F1]
editbind "F10" [keyswitch F10 :edef:F10 :ecus:F10]
editbind "F11" [keyswitch F11 :edef:F11 :ecus:F11]
editbind "F12" [keyswitch F12 :edef:F12 :ecus:F12]
editbind "F2" [keyswitch F2 :edef:F2 :ecus:F2]
editbind "F3" [keyswitch F3 :edef:F3 :ecus:F3]
editbind "F4" [keyswitch F4 :edef:F4 :ecus:F4]
editbind "F6" [keyswitch F6 :edef:F6 :ecus:F6]
editbind "F7" [keyswitch F7 :edef:F7 :ecus:F7]
editbind "F8" [keyswitch F8 :edef:F8 :ecus:F8]
editbind "F9" [keyswitch F9 :edef:F9 :ecus:F9]
editbind "G" [keyswitch G :edef:G :ecus:G]
editbind "H" [keyswitch H :edef:H :ecus:H]
editbind "HOME" [keyswitch HOME :edef:HOME :ecus:HOME]
editbind "I" [keyswitch I :edef:I :ecus:I]
editbind "INSERT" [keyswitch INSERT :edef:INSERT :ecus:INSERT]
editbind "J" [keyswitch J :edef:J :ecus:J]
editbind "K" [keyswitch K :edef:K :ecus:K]
editbind "KP0" [keyswitch KP0 :edef:KP0 :ecus:KP0]
editbind "KP1" [keyswitch KP1 :edef:KP1 :ecus:KP1]
editbind "KP2" [keyswitch KP2 :edef:KP2 :ecus:KP2]
editbind "KP3" [keyswitch KP3 :edef:KP3 :ecus:KP3]
editbind "KP4" [keyswitch KP4 :edef:KP4 :ecus:KP4]
editbind "KP5" [keyswitch KP5 :edef:KP5 :ecus:KP5]
editbind "KP6" [keyswitch KP6 :edef:KP6 :ecus:KP6]
editbind "KP7" [keyswitch KP7 :edef:KP7 :ecus:KP7]
editbind "KP8" [keyswitch KP8 :edef:KP8 :ecus:KP8]
editbind "KP9" [keyswitch KP9 :edef:KP9 :ecus:KP9]
editbind "KP_DIVIDE" [keyswitch KP_DIVIDE :edef:KP_DIVIDE :ecus:KP_DIVIDE]
editbind "KP_ENTER" [keyswitch KP_ENTER :edef:KP_ENTER :ecus:KP_ENTER]
editbind "KP_MINUS" [keyswitch KP_MINUS :edef:KP_MINUS :ecus:KP_MINUS]
editbind "KP_MULTIPLY" [keyswitch KP_MULTIPLY :edef:KP_MULTIPLY :ecus:KP_MULTIPLY]
editbind "KP_PLUS" [keyswitch KP_PLUS :edef:KP_PLUS :ecus:KP_PLUS]
editbind "L" [keyswitch L :edef:L :ecus:L]
editbind "LALT" [keyswitch LALT :edef:LALT :ecus:LALT]
editbind "LCTRL" [keyswitch LCTRL :edef:LCTRL :ecus:LCTRL]
editbind "LEFT" [keyswitch LEFT :edef:LEFT :ecus:LEFT]
editbind "LEFTBRACKET" [keyswitch LEFTBRACKET :edef:LEFTBRACKET :ecus:LEFTBRACKET]
editbind "LMETA" [keyswitch LMETA :edef:LMETA :ecus:LMETA]
editbind "LSHIFT" [keyswitch LSHIFT :edef:LSHIFT :ecus:LSHIFT]
editbind "M" [keyswitch M :edef:M :ecus:M]
editbind "MENU" [keyswitch MENU :edef:MENU :ecus:MENU]
editbind "MINUS" [keyswitch MINUS :edef:MINUS :ecus:MINUS]
editbind "MOUSEBACK" [keyswitch MOUSEBACK :edef:MOUSEBACK :ecus:MOUSEBACK]
editbind "MOUSEFORWARD" [keyswitch MOUSEFORWARD :edef:MOUSEFORWARD :ecus:MOUSEFORWARD]
editbind "MOUSELEFT" [keyswitch MOUSELEFT :edef:MOUSELEFT :ecus:MOUSELEFT]
editbind "MOUSEMIDDLE" [keyswitch MOUSEMIDDLE :edef:MOUSEMIDDLE :ecus:MOUSEMIDDLE]
editbind "MOUSERIGHT" [keyswitch MOUSERIGHT :edef:MOUSERIGHT :ecus:MOUSERIGHT]
editbind "MOUSEWHEELDOWN" [keyswitch MOUSEWHEELDOWN :edef:MOUSEWHEELDOWN :ecus:MOUSEWHEELDOWN]
editbind "MOUSEWHEELUP" [keyswitch MOUSEWHEELUP :edef:MOUSEWHEELUP :ecus:MOUSEWHEELUP]
editbind "N" [keyswitch N :edef:N :ecus:N]
editbind "NUMLOCK" [keyswitch NUMLOCK :edef:NUMLOCK :ecus:NUMLOCK]
editbind "O" [keyswitch O :edef:O :ecus:O]
editbind "P" [keyswitch P :edef:P :ecus:P]
editbind "PAGEDOWN" [keyswitch PAGEDOWN :edef:PAGEDOWN :ecus:PAGEDOWN]
editbind "PAGEUP" [keyswitch PAGEUP :edef:PAGEUP :ecus:PAGEUP]
editbind "PAUSE" [keyswitch PAUSE :edef:PAUSE :ecus:PAUSE]
editbind "PERIOD" [keyswitch PERIOD :edef:PERIOD :ecus:PERIOD]
editbind "Q" [keyswitch Q :edef:Q :ecus:Q]
editbind "QUOTE" [keyswitch QUOTE :edef:QUOTE :ecus:QUOTE]
editbind "R" [keyswitch R :edef:R :ecus:R]
editbind "RALT" [keyswitch RALT :edef:RALT :ecus:RALT]
editbind "RCTRL" [keyswitch RCTRL :edef:RCTRL :ecus:RCTRL]
editbind "RETURN" [keyswitch RETURN :edef:RETURN :ecus:RETURN]
editbind "RIGHT" [keyswitch RIGHT :edef:RIGHT :ecus:RIGHT]
editbind "RIGHTBRACKET" [keyswitch RIGHTBRACKET :edef:RIGHTBRACKET :ecus:RIGHTBRACKET]
editbind "RSHIFT" [keyswitch RSHIFT :edef:RSHIFT :ecus:RSHIFT]
editbind "S" [keyswitch S :edef:S :ecus:S]
editbind "SCROLLOCK" [keyswitch SCROLLOCK :edef:SCROLLOCK :ecus:SCROLLOCK]
editbind "SEMICOLON" [keyswitch SEMICOLON :edef:SEMICOLON :ecus:SEMICOLON]
editbind "SLASH" [keyswitch SLASH :edef:SLASH :ecus:SLASH]
editbind "SPACE" [keyswitch SPACE :edef:SPACE :ecus:SPACE]
editbind "SYSREQ" [keyswitch SYSREQ :edef:SYSREQ :ecus:SYSREQ]
editbind "T" [keyswitch T :edef:T :ecus:T]
editbind "TAB" [keyswitch TAB :edef:TAB :ecus:TAB]
editbind "U" [keyswitch U :edef:U :ecus:U]
editbind "UP" [keyswitch UP :edef:UP :ecus:UP]
editbind "V" [keyswitch V :edef:V :ecus:V]
editbind "W" [keyswitch W :edef:W :ecus:W]
editbind "X" [keyswitch X :edef:X :ecus:X]
editbind "Y" [keyswitch Y :edef:Y :ecus:Y]
editbind "Z" [keyswitch Z :edef:Z :ecus:Z]

:def:1 = [ setweapon "rail"  ]
:def:2 = [ setweapon "pulse" ]
:def:A = [ left ]
:def:BACKQUOTE = [ chatexec ]
:def:D = [ right ]
:def:DOWN = [ backward ]
:def:E = "                     ^n        if (m_edit $getmode) [^n            if (iskeyheld ^"LCTRL^") [^n                gridpower 0^n                edittoggle^n                sleep 1 [^n                    gotosel ; edittoggle^n                    gridpower @@gridpower^n                    ^n                ]^n            ] [ edittoggle ]^n        ]^n    "
:def:ESCAPE = [ togglemainmenu ]
:def:F = [ melee ]
:def:F1 = [ toggleui "cci" ]
:def:F11 = [ togglefullcon ]
:def:F12 = [ screenshot ]
:def:F5 = [                                     
        if (! $mapname) [ toggleui "dialog_savemap" ] [
            if (iskeyheld "LCTRL") [ toggleui "dialog_savemap" ] savemap
        ]
    ]
:def:F6 = [ toggleui "map_browser" ]
:def:F9 = [ thirdperson (! $thirdperson) ]
:def:J = [ taunt ]
:def:LEFT = [ left ]
:def:LSHIFT = [ crouch ]
:def:MENU = [ togglemainmenu ]
:def:MOUSELEFT = [ shoot ]
:def:MOUSEMIDDLE = [ melee ]
:def:MOUSERIGHT = [ dozoom ]
:def:MOUSEWHEELDOWN = [ ums_delta -1 ]
:def:MOUSEWHEELUP = [ ums_delta  1 ]
:def:PAGEDOWN = [ if $fullconsole [ conskip -5 ] delbot ]
:def:PAGEUP = [ if $fullconsole [ conskip 5 ] addbot ]
:def:PAUSE = [ paused (! $paused) ]
:def:Q = [ if (m_edit $getmode) [ edittoggle ; followplayer ] ]
:def:R = [ dropflag ]
:def:RIGHT = [ right ]
:def:S = [ backward ]
:def:SLASH = [ chatexec ]
:def:SPACE = [ jump ]
:def:T = [ chatsay ]
:def:TAB = [ if $mainmenu [ showui "servers" ] [ holdui "scoreboard" ] ]
:def:UP = [ forward ]
:def:W = [ forward ]
:def:Y = [ chatteamsay ]
:def:Z = [ if (iskeyheld "LCTRL") [ history 0 ] ]
:edef:0 = [ if (uivisible "material") [ editmat "air"      ] ]
:edef:1 = [ if (uivisible "material") [ editmat "clip"     ] [ ums_setmodifier 11 ] ]
:edef:2 = [ if (uivisible "material") [ editmat "noclip"   ] [ ums_setmodifier 12 ] ]
:edef:3 = [ if (uivisible "material") [ editmat "gameclip" ] [ ums_setmodifier 13 ] ]
:edef:4 = [ if (uivisible "material") [ editmat "death"    ] [ ums_setmodifier 14 ] ]
:edef:5 = [ if (uivisible "material") [ editmat "alpha"    ] [ ums_setmodifier 15 ] ]
:edef:6 = [ if (uivisible "material") [ editmat "nogi"     ] [ allfaces (! $allfaces) ] ]
:edef:7 = [
        if (uivisible "material") [
            editmat (concatword "glass" $mat_glass)
            mat_glass = (+ (mod $mat_glass 4) 1)
        ] [ entselsnap (! $entselsnap) ]
    ]
:edef:8 = [
        if (uivisible "material") [
            editmat (concatword "water" $mat_water)
            mat_water = (+ (mod $mat_water 4) 1)
        ] [ entediting (! $entediting) ]
    ]
:edef:9 = [
        if (uivisible "material") [
            editmat (concatword "lava" $mat_lava)
            mat_lava = (+ (mod $mat_lava 4) 1)
        ] selentedit
    ]
:edef:A = [ left ]
:edef:B = [                     
        if (iskeyheld "LCTRL") [
            blendpaintmode (! $blendpaintmode)
            if $blendpaintmode [ hmapedit 0  ]
            passthrough $blendpaintmode
        ] [ if $blendpaintmode [ ums_setmodifier 8 ] ]
    ]
:edef:BACKQUOTE = [ chatexec ]
:edef:C = [ editcopy ]
:edef:D = [ right ]
:edef:DELETE = [ editdel ]
:edef:DOWN = [
        if (iskeyheld "LCTRL") [
            if $enthavesel [] [
                if (iskeyheld "LSHIFT") [
                    vdelta [ vscroll 0 -0.02 ]
                ] [
                    vdelta [ voffset 0 (- 0 ums_multiplier) ]
                ]
            ]
        ]
    ]
:edef:E = "                     ^n        if (iskeyheld ^"LCTRL^") [^n                gridpower 0^n                sleep 0 [^n                    gotosel^n                    gridpower @@gridpower^n                ]^n        ] edittoggle^n    "
:edef:EQUALS = [ wireframe = (! $wireframe) ]
:edef:ESCAPE = [ togglemainmenu ]
:edef:F = [ ums_setmodifier 2 ]
:edef:F1 = [ toggleui "cci" ]
:edef:F11 = [ togglefullcon ]
:edef:F12 = [ screenshot ]
:edef:F2 = [ toggleui "texture_browser" ]
:edef:F3 = [ toggleui "mapmodel_browser" ]
:edef:F4 = [ toggleui "material" ]
:edef:F6 = [ toggleui "map_browser" ]
:edef:F7 = [ toggleui "env_settings" ]
:edef:F8 = [ toggleui "geo_prefab" ]
:edef:F9 = [ thirdperson (! $thirdperson) ]
:edef:G = [ ums_setmodifier 1 ]
:edef:H = [                     
        if (iskeyheld "LCTRL") [
            hmapedit (! $hmapedit)
            if $hmapedit [ blendpaintmode 0 ]
            passthrough $hmapedit
        ] [ if $hmapedit [ ums_setmodifier 6 ] ]
    ]
:edef:I = [ redo ]
:edef:K = [ remip ]
:edef:KP0 = [ blendpaintmode 0 ]
:edef:KP1 = [ blendpaintmode 1 ]
:edef:KP2 = [ blendpaintmode 2 ]
:edef:KP3 = [ blendpaintmode 3 ]
:edef:KP4 = [ blendpaintmode 4 ]
:edef:KP5 = [ blendpaintmode 5 ]
:edef:KP_ENTER = [ entselect insel ]
:edef:L = [                     
        if (iskeyheld "LCTRL") [ fullbright (! $fullbright) ] [ 
            calclight ; recalc
        ]
    ]
:edef:LEFT = [
        if (iskeyheld "LCTRL") [
            if $enthavesel [] [
                if (iskeyheld "LSHIFT") [
                    vdelta [ vscroll -0.02 0 ]
                ] [
                    vdelta [ voffset (- 0 ums_multiplier) 0 ]
                ]
            ]
        ]
    ]
:edef:LSHIFT = [ editcut ]
:edef:M = [                     
        if (iskeyheld "LCTRL") [ .showmat (! $.showmat) ; showmat $.showmat ] [
            if (! $enthavesel) [ holdui "material" ]
        ]
    ]
:edef:MENU = [ togglemainmenu ]
:edef:MINUS = [ outline = (! $outline) ]
:edef:MOUSEBACK = [ undo ]
:edef:MOUSEFORWARD = [ redo ]
:edef:MOUSELEFT = [ if $blendpaintmode paintblendmap editdrag ]
:edef:MOUSEMIDDLE = [ if (iskeyheld "Z") [ floatspeed 200 ] selcorners ]
:edef:MOUSERIGHT = [ if $blendpaintmode rotateblendbrush editextend ]
:edef:MOUSEWHEELDOWN = [
        if $.followplayer [
            local len ; len = (listlen $.followlist)
            if (> $len 1) [
                .followcn (- (indexof $.followlist $.followcn) 1) (+ $len 1)
                .followcn (at $.followlist (? (< $.followcn 0) (- $len 1) $.followcn))
            ]
        ] [ ums_delta -1 ]
    ]
:edef:MOUSEWHEELUP = [
        if $.followplayer [
            local len ; len = (listlen $.followlist)
            if (> $len 1) [
                .followcn (mod (+ (indexof $.followlist $.followcn) 1) (+ $len 1))
                .followcn (at $.followlist $.followcn)
            ]
        ] [ ums_delta 1 ]
    ]
:edef:N = [ selentfindall ]
:edef:PAGEDOWN = [
        if $fullconsole [ conskip -5 ] [
            if $enthavesel [ entautoview -1 ] [
                vdelta [ vscale 0.5 ]
            ]
        ]
    ]
:edef:PAGEUP = [
        if $fullconsole [ conskip 5 ] [
            if $enthavesel [ entautoview 1 ] [
                vdelta [ vscale 2 ]
            ]
        ]
    ]
:edef:PAUSE = [ paused (! $paused) ]
:edef:Q = [ ums_setmodifier 3 ]
:edef:R = [ ums_setmodifier 4 ]
:edef:RCTRL = [ ums_multiplier = 32 ; onrelease [ ums_multiplier = 8 ] ]
:edef:RIGHT = [
        if (iskeyheld "LCTRL") [
            if $enthavesel [] [
                if (iskeyheld "LSHIFT") [
                    vdelta [ vscroll 0.02 0 ]
                ] [
                    vdelta [ voffset $ums_multiplier 0 ]
                ]
            ]
        ]
    ]
:edef:S = [ backward ]
:edef:SLASH = [ chatexec ]
:edef:SPACE = [ cancelsel ]
:edef:T = [ chatsay ]
:edef:TAB = [ if (uivisible "main") [ showui "server_browser" ] [ holdui "scoreboard" ] ]
:edef:U = [ undo ; passthroughsel 0 ]
:edef:UP = [
        if (iskeyheld "LCTRL") [
            if $enthavesel [] [
                if (iskeyheld "LSHIFT") [
                    vdelta [ vscroll 0 0.02 ]
                ] [
                    vdelta [ voffset 0 $ums_multiplier ]
                ]
            ]
        ]
    ]
:edef:V = [ editpaste ]
:edef:W = [ forward ]
:edef:X = [ editflip ]
:edef:Y = [ ums_setmodifier 5 ]
:edef:Z = [                     
        if (iskeyheld "LCTRL") [ history 0 ] [ ums_setmodifier 7 ]
    ]
:sdef:A = [ left ]
:sdef:BACKQUOTE = [ chatexec ]
:sdef:D = [ right ]
:sdef:DOWN = [ backward ]
:sdef:ESCAPE = [ togglemainmenu ]
:sdef:F1 = [ toggleui "cci" ]
:sdef:F11 = [ togglefullcon ]
:sdef:F12 = [ screenshot ]
:sdef:F6 = [ toggleui "map_browser" ]
:sdef:F9 = [ thirdperson (? $thirdperson 0 2) ]
:sdef:K = [                     
        if (m_edit $getmode) [ remip ]
    ]
:sdef:L = [                     
        if (m_edit $getmode) [
            if (iskeyheld "LCTRL") [ fullbright (! $fullbright) ] [ 
                calclight ; recalc
            ]
        ]
    ]
:sdef:LEFT = [ left ]
:sdef:MENU = [ togglemainmenu ]
:sdef:MOUSELEFT = [ nextfollow ]
:sdef:MOUSEMIDDLE = [ follow ]
:sdef:MOUSERIGHT = [ nextfollow -1 ]
:sdef:MOUSEWHEELDOWN = [
        if (! $thirdperson) [ nextfollow -1 ] [
            loop i 10 [ sleep (* $i 10) [
                thirdpersondistance (minf (+f $thirdpersondistance 0.25) 50)
            ] ]
        ]
    ]
:sdef:MOUSEWHEELUP = [
        if (! $thirdperson) [ nextfollow 1 ] [
            loop i 10 [ sleep (* $i 10) [
                thirdpersondistance (maxf (-f $thirdpersondistance 0.25) 10)
            ] ]
        ]
    ]
:sdef:PAGEDOWN = [ if $fullconsole [ conskip -5 ] delbot ]
:sdef:PAGEUP = [ if $fullconsole [ conskip 5 ] addbot ]
:sdef:PAUSE = [ paused (! $paused) ]
:sdef:RIGHT = [ right ]
:sdef:S = [ backward ]
:sdef:SLASH = [ chatexec ]
:sdef:SPACE = [ follow ]
:sdef:T = [ chatsay ]
:sdef:TAB = [ if (uivisible "main") [ showui "server_browser" ] [ holdui "scoreboard" ] ]
:sdef:UP = [ forward ]
:sdef:W = [ forward ]
:sdef:Y = [ chatsayteam ]
:sdef:Z = [ if (iskeyheld "LCTRL") [ history 0 ] ]
:switch:0 = [0]
:switch:7 = [0]
:switch:A = [0]
:switch:C = [0]
:switch:D = [0]
:switch:E = [0]
:switch:ESCAPE = [0]
:switch:F = [0]
:switch:G = [0]
:switch:LALT = [1]
:switch:LCTRL = [0]
:switch:LMETA = [0]
:switch:LSHIFT = [0]
:switch:MINUS = [0]
:switch:MOUSELEFT = [0]
:switch:MOUSEMIDDLE = [0]
:switch:MOUSERIGHT = [0]
:switch:MOUSEWHEELDOWN = [0]
:switch:MOUSEWHEELUP = [0]
:switch:Q = [0]
:switch:R = [0]
:switch:RETURN = [0]
:switch:RSHIFT = [0]
:switch:S = [0]
:switch:SPACE = [0]
:switch:T = [0]
:switch:TAB = [0]
:switch:V = [0]
:switch:W = [0]
:switch:X = [0]
:switch:Y = [0]
CIELCH_to_RGB24 = [
    local x y z   r g b
    y = (divf (+f $arg1 16) 116)
    x = (+f (divf (*f (cos $arg3) $arg2) 500) $y)
    z = (-f $y (divf (*f (sin $arg3) $arg2) 200))
    looplist i "x y z" [
        if (>f (pow $$i 3) 0.008856) [
            $i = (pow $$i 3)
        ] [ $i = (divf (-f $$i (divf 16 116)) 7.787) ]
    ]
    x = (divf (*f $x  95.047) 100)
    z = (divf (*f $z 108.883) 100)
    r = (+f (*f $x  3.2406) (*f $y -1.5372) (*f $z -0.4986))
    g = (+f (*f $x -0.9689) (*f $y  1.8758) (*f $z  0.0415))
    b = (+f (*f $x  0.0557) (*f $y -0.2040) (*f $z  1.0570))
    looplist i "r g b" [
        if (>f $$i 0.0031308) [
            $i = (-f (*f 1.055 (pow $$i (divf 1 2.4))) 0.055)
        ] [ $i = (*f 12.92 $$i) ]
        $i = (round (*f $$i 255))
    ]
    if (< $numargs 4) [ concat $r $g $b ] [ doargs $arg4 ]
]
HSV_to_RGB24 = "^n    local c x m r g b^n    c = (*f $arg3 $arg2)^n    x = (*f $c (-f 1 (absf (-f (modf (divf $arg1 60) 2) 1))))^n    m = (-f $arg3 $c)^n    h = (div $arg1 60)^n    r = (round (*f 255 (+f (at [@c @x 0 0 @x @c] $h) $m)))^n    g = (round (*f 255 (+f (at [@x @c @c @x 0 0] $h) $m)))^n    b = (round (*f 255 (+f (at [0 0 @x @c @c @x] $h) $m)))^n    if (< $numargs 4) [ concat $r $g $b ] [ doargs $arg4 ]^n"
INT_to_ARGB32 = [
    local a r g b
    a =    (>> $arg1 24)
    r = (& (>> $arg1 16) 255)
    g = (& (>> $arg1  8) 255)
    b = (&     $arg1     255)
    if (< $numargs 2) [ concat $a $r $g $b ] [ doargs $arg2 ]
]
RGB24_to_CIELCH = [
    local x y z   a b   l c h
    looplist i "arg1 arg2 arg3" [
        $i = (divf $$i 255)
        if (>f $$i 0.04045) [
            $i = (*f (pow (divf (+f $$i 0.055) 1.055) 2.4) 100)
        ] [ $i = (*f (divf $$i 12.92) 100) ]
    ]
    x = (divf (+f (*f $arg1 0.4124) (*f $arg2 0.3576) (*f $arg3 0.1805))  95.047)
    y = (divf (+f (*f $arg1 0.2126) (*f $arg2 0.7152) (*f $arg3 0.0722)) 100.000)
    z = (divf (+f (*f $arg1 0.0193) (*f $arg2 0.1192) (*f $arg3 0.9505)) 108.883)
    looplist i "x y z" [
        if (>f $$i 0.008856) [
            $i = (pow $$i (divf 1 3))
        ] [ $i = (+f (*f 7.787 $$i) (divf 16 116)) ]
    ]
    a = (*f 500 (-f $x $y))
    b = (*f 200 (-f $y $z))
    l = (if (>f $y 0.008856) [-f (*f 116 $y) 16] [*f 903.3 $y])
    c = (sqrt (+f (pow $a 2) (pow $b 2)))
    h = (atan2 $b $a)
    cond (<f $h 0) [ h = (+f $h 360) ] (>=f $h 360) [ h = (-f $h 360) ]
    if (< $numargs 4) [ concat $l $c $h ] [ doargs $arg4 ]
]
RGB24_to_HSV = [
    local r g b mn d h s v
    r  = (divf $arg1 0xFF)
    g  = (divf $arg2 0xFF)
    b  = (divf $arg3 0xFF)
    v  = (maxf $r $g $b)
    mn = (minf $r $g $b)
    if (=f $mn $v) [
        d = 0
        h = 0
        s = 0
    ] [
        d = (-f $v $mn)
        s = (divf $d $v)
        h = (casef $v $r [
            floor (*f 60 (modf (divf (-f $g $b) $d) 6))
        ] $g [
            *f 60 (+f (divf (-f $b $r) $d) 2)
        ] $b [
            *f 60 (+f (divf (-f $r $g) $d) 4)
        ])
    ]
    if (< $numargs 4) [ concat $h $s $v ] [ doargs $arg4 ]
]
RGB32_to_HEX = [
    local hex
    hex = (tohex (
        RGB32_to_INT $arg1 $arg2 $arg3 $arg4
    ) (? $arg5 (min $arg5 16) 6))
    if (< $numargs 6) [ result $hex ] [ doargs $arg6 ]
]
RGB32_to_INT = [
    local a r g b
    a = (<< $arg1 24)
    r = (<< $arg2 16)
    g = (<< $arg3  8)
    b =     $arg4
    if (>= $numargs 5) [ doargs $arg5 ] [ + $a $r $g $b ]
]
UI_aspectratio = [custom]
UI_button_padding = [0.008]
UI_findratio = "^n    looplist ratio $opt_ratios [^n        looplist res $[UI_ratio@ratio] [^n            if (=s $res $UI_resolution) [ UI_aspectratio = $ratio ]^n        ]^n    ]^n"
UI_mtitle_padding = [0.006]
UI_optbar = [
    uitablerow [
        uifill $UI_optc1w 0.032 [ UIbar 1 ]
        
        uialign* -1 0
    ]
]
UI_optc1w = [0.325]
UI_optc1wA = [0.025]
UI_optc1wB = [0.30]
UI_optc2w = [0.363]
UI_optrowh = [0.032]
UI_opttabs = [3]
UI_ratio16:10 = [
    "768 480"
    "1024 640"
    "1280 800"
    "1440 900"
    "1680 1050"
    "1920 1200"
    "2560 1600"
]
UI_ratio16:9 = [
    "800 450"
    "1024 600"
    "1280 720"
    "1366 768"
    "1600 900"
    "1920 1080"
    "2048 1152"
    "2560 1440"
]
UI_ratio4:3 = [
    "640 480"
    "800 600"
    "1024 768"
    "1152 864"
    "1280 960"
    "1400 1050"
    "1600 1200"
    "1920 1440"
    "2560 1920"
]
UI_ratio5:4 = [
    "800 640"
    "960 768"
    "1280 1024"
    "1440 1152"
    "1600 1280"
    "1920 1536"
    "2560 2048"
]
UI_resolution = [1916 1017]
UI_window_padding = [0.010]
UIactivetable = [
    uigrid $arg5 0 0 [
        UIsettip $arg6
        looplist3 n c a $arg4 [
            if (=s $n "") uifill [
                UIbutton "hold2" [
                    c ; uitext $n $arg3
                ] $arg1 $arg2 $a -1
            ]
        ]
    ]
]
UIarrowbutton = [
    local arrowsize
    arrowsize = (*f (minf $arg1 $arg2) (minf 1 (maxf 0 $arg5)))
    uitarget $arg1 $arg2 [
        style_button_default
        doargs $arg6
        uirelease [ doargs $arg4 ]
        uiclamp* 1 1 1 1
        UItriangle 0xFFFFFF $arrowsize $arrowsize $arg3
    ]
]
UIbar = [
    uiline $c_line
    uiclamp- $arg1 $arg1 $arg2 $arg2
]
UIbasiceditor = [
    uicolor $c_menu_m 0 0 [
        uitexteditor $arg1 $arg2 $arg3 $arg4 $arg5 $arg6 [
            arg7
            uioutline (uifocus? $c_focus $c_line)
            uiclamp- 1 1 1 1
        ]
    ]
]
UIbasicfield = [
    uicolor $c_menu_m 0 0 [
        uifield $arg1 $arg2 $arg3 $arg4 [
            arg5
            uioutline (uifocus? $c_focus $c_line)
            uiclamp- 1 1 1 1
        ]
    ]
]
UIbox = "^n    uitarget $arg2 $arg3 [^n        if (=s $arg1 ^"^") [^n            style_generic_default^n        ] [ doargs [style_generic_@arg1] ]^n        uiclamp* 1 1 1 1^n        doargs $arg4^n    ]^n"
UIbutton = "^n    uitarget $arg3 $arg4 [^n        doargs $arg7^n        if (=s $arg1 ^"^") [^n            style_button_default^n        ] [ doargs [style_button_@arg1] ]^n        uirelease [ doargs $arg5 ]^n        uiclamp* 1 1 1 1^n        uispace (? (>= $numargs 8) $arg8 $UI_button_padding) 0 [^n            uiclamp 1 1^n            uihlist 0.01 [^n                uialign $arg6 0^n                doargs $arg2^n            ]^n        ]^n    ]^n"
UIbuttonarea = "^n    uitarget $arg2 $arg3 [^n        if (=s $arg1 ^"^") [^n            style_button_default^n        ] [ doargs [style_button_@arg1] ]^n        uiclamp* 1 1 1 1^n        doargs $arg4^n    ]^n"
UIcheckbox = [
    if $.UI_useimg [ UIfastimg "ui/" "ui_checkbox" (!= (arg1) 0) $arg2 $arg2 ] [
        if $arg4 [] [ arg4 = $c_cb0 ]
        if $arg3 [] [ arg3 = $c_cb1 ]
        uicolor (? (arg1) $arg3 $arg4) $arg2 $arg2 [
            uimodvgradient 0xFFFFFF 0xB8B8B8
            doargs $arg5
            uioutline $c_line
            uiclamp* 1 1 1 1
        ]
    ]
]
UIcleartip = " uihover [] [ [.@[uiname]_tip] = ^"^" ] "
UIentcolor12 = [
    local c1 c2 c3 color12 color24
    color12 = (& (entattr $arg1) 0xFFF)
    c1 =    (>> $color12 0x8)
    c2 = (& (>> $color12 0x4) 0xF)
    c3 = (&     $color12      0xF)
    color24 = (| (<< $c1 0x14) (<< $c2 0xC) (<< $c3 0x4) 0x0F0F0F)
    UIhcolorslider c1 0 15 (& $color24 0x00FFFF) (| $color24 0xFF0000) 0.18 0.036 [ entattr $arg1 (| (<< $c1 0x8) (& $color12 0x0FF)) ]
    UIhcolorslider c2 0 15 (& $color24 0xFF00FF) (| $color24 0x00FF00) 0.18 0.036 [ entattr $arg1 (| (<< $c2 0x4) (& $color12 0xF0F)) ]
    UIhcolorslider c3 0 15 (& $color24 0xFFFF00) (| $color24 0x0000FF) 0.18 0.036 [ entattr $arg1 (|     $c3      (& $color12 0xFF0)) ]
]
UIentcolor24 = "^n    local c1 c2 c3 color24^n    loop+ i 1 3 [ [c@i] = (& $[ea@i] 0xFF) ]^n    color24 = (| (<< $c1 0x10) (<< $c2 0x8) $c3)^n    UIhcolorslider c1 0 255 (& $color24 0x00FFFF) (| $color24 0xFF0000) 0.60 0.036 [ entattr 1 $c1 ]^n    UIhcolorslider c2 0 255 (& $color24 0xFF00FF) (| $color24 0x00FF00) 0.60 0.036 [ entattr 2 $c2 ]^n    UIhcolorslider c3 0 255 (& $color24 0xFFFF00) (| $color24 0x0000FF) 0.60 0.036 [ entattr 3 $c3 ]^n"
UIentpropertycell = [
    if $arg4 [] [ arg4 = 0.2 ]
    UIbox [box (? (|| $uihover? $uihold? (arg1)) $c_diag2 $c_diag1) d n d] $arg4 0.128 [
        uispace $UI_window_padding $UI_window_padding [
            uiclamp 1 1 1 1
            uivlist $arg2 [
                uialign -2 -1
                uiclamp 1 1
                doargs $arg3
            ]
        ]
    ]
]
UIfastimg = [
    uiimage (concatword "media/interface/" $arg1 $arg2 $arg3 ".png") $arg4 $arg5 [ arg6 ]
]
UIhcolorslider = "^n    uigroup [^n        uihgradient $arg4 $arg5 $arg6 (*f 0.75 $arg7) [ uioutline $c_line ; uiclamp- 1 1 1 1 ]^n        uifont ^"default_outline^" [^n            uicolortext $$arg1 @(? (|| uihover? uihold?) 0x98FFFFFF 0x60FFFFFF) 0.7^n        ]^n        uihslider $arg1 $arg2 $arg3 1 [ doargs $arg8 ] [^n            uifill (*f 0.98 $arg6) $arg7^n            uisliderbutton [ uiline 0xFFFFFF 0 $arg7 ]^n        ]^n    ]^n"
UIhscroll = [
    local arrowsize
    arrowsize = (*f $arg2 0.35)
    uihlist 0 [
        uiscrollarrow $arg3
        UIbar 0 1
        uihscrollbar [
            uifill $arg1 $arg2 [ UIbar 1 ]
            uiscrollbutton [
                uiclamp 0 0 1 1
                style_button_hold1
                uiclamp* 1 1 1 1
                uispace $arrowsize 0 [
                    uiclamp 1 1
                    style_generic_linesv 3 0.004 (*f $arg2 0.5)
                    UItriangle $c_line $arrowsize $arrowsize  90 ; uialign- -1
                    UItriangle $c_line $arrowsize $arrowsize 270 ; uialign-  1
                ]
            ]
        ]
        UIbar 0 1
        uiscrollarrow (-f 0 $arg3)
    ]
]
UIhslider = [
    if $arg9 [] [ arg9 = 0.3 ]
    uihlist 0 [
        uisliderarrow -1 [ UIarrowbutton $arg6 $arg6 90 [] $arg9 ]
        uihslider $arg1 $arg2 $arg3 $arg4 $arg8 [
            UIbox "" (-f $arg5 (*f $arg6 2)) (*f 0.75 $arg6)
            uisliderbutton [
                uifill 0.012 $arg6
                style_button_hold1
                uiclamp* 1 1 1 1
                if (< $numargs 10) [
                    uispace $UI_button_padding 0 arg7
                ] arg7
            ]
        ]
        uisliderarrow 1 [ UIarrowbutton $arg6 $arg6 270 [] $arg9 ]
    ]
]
UIhsliderslim = "^n    uigroup [^n        UIbox ^"^" $arg4 (*f 0.75 $arg5) [ uioutline $c_line ; uiclamp- 1 1 1 1 ]^n        uifont ^"default_outline^" [^n            uicolortext $$arg1 @(? (|| uihover? uihold?) 0x98FFFFFF 0x60FFFFFF) 0.7^n        ]^n        uihslider $arg1 $arg2 $arg3 1 [ doargs $arg6 ] [^n            uifill (*f 0.98 $arg4) $arg5^n            uisliderbutton [ uiline 0xFFFFFF 0 $arg5 ]^n        ]^n    ]^n"
UIhudcell = [
    if (< $numargs 4) [ arg4 = $UI_window_padding ]
    if (< $numargs 5) [ arg5 = $UI_window_padding ]
    UIbox [box $c_diag1 d n d] $arg1 $arg2 [
        uispace $arg4 $arg5 [
            uiclamp 1 1 1 1
            doargs $arg3
        ]
    ]
]
UIhudcellslider = [
    UIhsliderslim $arg1 $arg2 $arg3 0.18 0.032 [ entattr $arg4 $$arg1 ]
]
UIhudcelltitle = [
    uihlist 0 [
        UIbox "box $c_diag1 n n d" 0.148 0.026 [ uitext $arg1 0.55 ]
        UIkeybox 0.032 0.032 [ uitext $arg2 0.5 ] (? (iskeyheld $arg2) $c_cb1)
    ]
]
UIkeybox = [
    if $arg4 [] [ arg4 = 0x505050 ]
    uigroup [
        uicolor $arg4 (-f $arg1 0.004) (-f $arg2 0.003) [ uimodvgradient 0xFFFFFF $c_grdmod ; uiclamp- 1 1 1 1 ]
        uistretchedimage "media/interface/ui/io/frame.png" 0.025 0.025 [ uifill $arg1 $arg2 ]
        uioffset 0 -0.003 [ doargs $arg3 ]
    ]
]
UIlistslider = "^n    if $arg7 [] [ arg7 = 0.3 ]^n    local ls_x ls_y^n    ls_x = (-f $arg4 (*f $arg5 2))^n    ls_y = (*f $arg5 0.85)^n    uihlist 0 [^n        UIarrowbutton $arg5 $arg5 90 [^n            n = ([listfind@arg2] $arg3 $$arg1 1)^n            if (< $n 0) [n = 0] [^n                n = (- $n 2)^n                if (< $n 0) [ n = (+ $n (listlen $arg3)) ]^n            ]^n            $arg1 = (at $arg3 $n)^n            arg6^n        ] $arg7^n        UIbox ^"^" $ls_x $ls_y [^n            uiclip $ls_x $ls_y [^n                if (< $numargs 8) [^n                    uitext (|| [[listassoc@arg2] $arg3 $$arg1] [ result ^"custom^" ]) 0.6^n                ] arg8^n            ]^n        ]^n        UIarrowbutton $arg5 $arg5 270 [^n            n = ([listfind@arg2] $arg3 $$arg1 1)^n            n = (if (>= $n 0) [mod (+ $n 2) (listlen $arg3)] [- (listlen $arg3) 2])^n            $arg1 = (at $arg3 $n)^n            arg6^n        ] $arg7^n    ]^n"
UImenu = "^n    newui $arg1 [^n        @arg5^n        @(? (>= $numargs 6) [^n            uivlist 0 [^n                UImenutitle [@@@arg6] 0 [^n                    @@@(if (= $numargs 7) [^n                        looplistconcat i [@@arg7] [ result [UItitlebutton_@i ;] ]^n                    ] [ result [UItitlebutton_mini ; UItitlebutton_exit] ])^n                ]^n                uicolor $c_menu 0.01 0.01 [^n                    uitiledimage ^"media/interface/ui/ui_bg0.png^" 0.006 0.006^n                    uispace $UI_window_padding $UI_window_padding [@@@@arg2]^n                    uiclamp* 1 1 1 1^n                ]^n            ]^n        ] [^n            uicolor $c_menu 0.01 0.01 [^n                uitiledimage ^"media/interface/ui/ui_bg0.png^" 0.006 0.006^n                uispace $UI_window_padding $UI_window_padding [@@@arg2]^n                uiclamp* 1 1 1 1^n            ]^n        ])^n        uioutline $c_line^n        uiclamp* 1 1 1 1^n    ] $arg3 $arg4^n"
UImenutitle = [
    if $arg2 [] [ arg2 = 0.04 ]
    uivgradient $c_main1 $c_main2 0 $arg2 [
        uiclamp 1 1
        uifont "default_outline" arg1
        if (= $numargs 3) [
            uispace $UI_mtitle_padding 0.001 [
                uialign 1 -1
                uihlist 0 arg3
            ]
        ]
    ]
]
UIpanel = "^n    newui $arg1 [^n        @arg5^n        uicolor $c_diag2 0.01 0.01 [^n            uispace $UI_window_padding $UI_window_padding [ @@@arg2 ]^n            uioutline $c_line^n            uiclamp* 1 1 1 1^n        ]^n        uiclamp* 1 1 1 1^n    ] $arg3 $arg4^n"
UIquickdialog = "^n    newui $arg1 [^n        @arg2^n        uispace $UI_window_padding $UI_window_padding [^n            uiclamp 1 1 1 1^n            @@arg3^n        ]^n    ] $arg4 $arg5^n"
UIradio = [
    if $.UI_useimg [ UIfastimg "ui/" "ui_radio" (!= (arg1) 0) $arg2 $arg2 ] [
        if $arg4 [] [ arg4 = $c_rd0 ]
        if $arg3 [] [ arg3 = $c_rd1 ]
        uicircleoutline $c_line $arg2 [
            uicircle (? (arg1) $arg3 $arg4) $arg2 [
                
                doargs $arg5
                uiclamp* 1 1 1 1
            ]
        ]
    ]
]
UIserver = "^n    UIbuttonarea ^"^" 0 0.064 [^n        uirelease [^n            if (!= (servinfonumplayers $arg1) (servinfomaxplayers $arg1)) [^n                if (> (servinfomastermode $arg1) 2) [^n                    .sb_connectid $arg1^n                    showui ^"dialog_serverconnect^"^n                ] [ connectservinfo $arg1 ]^n            ]^n        ]^n        uihlist 0.01 [^n            uialign -1^n            if (&& [=s $connectedip (servinfoname $arg1)] [= $connectedport (servinfoport $arg1)]) [^n                uifill^n                UItriangle 0 0.02 0.01 270^n            ] [ uifill 0.02 ]^n            uicroppedimage ^"media/interface/ui/mm.png^" 0.04 0.04 [@(*f (+ (servinfomastermode $arg1) 1) 48)p] 0 48p 1^n            uivlist 0.006 [^n                uihlist 0.01 [^n                    uitext ^"^^f4 .:^" 0.6^n                    uicolortext (servinfodesc $arg1) 0xBFBFBF 0.62^n                ]^n                uihlist 0.01 [^n                    uitext (servinfomodename $arg1) 0.55^n                    if (m_timed (servinfomode $arg1)) [^n                        uitext ^"^^f4~^" 0.6^n                        uitext (concatword ^"^^f8^" (servinfotime $arg1)) 0.55^n                    ]^n                    if (!=s (servinfomap $arg1) ^"^") [^n                        uitext ^"^^f4~^" 0.6^n                        uitext (concatword ^"^^f9^" (servinfomap $arg1)) 0.55^n                    ]^n                ]^n                uialign* -1^n            ]^n        ]^n        uihlist 0.01 [^n            uialign 1^n            uifill 0.05 0 [^n                uivlist 0.002 [^n                    local n ; n = 0^n                    loopwhile i 5 [<= (servinfoping $arg1) (at ^"525 270 165 110 55^" $i)] [ n = (+ $i 1) ]^n                    uicroppedimage ^"media/interface/ui/conn.png^" 0.025 0.025 [@(*f $n 64)p] 0 64p 1^n                    if (> (servinfoping $arg1) 2000) [ uitext ^"^^f2LAG^" 0.55 ] [^n                        uitext (servinfoping $arg1) 0.55^n                    ]^n                ]^n            ]^n            uifill 0.12 0 [^n                uihlist 0.006 [^n                    uitext (servinfonumplayers $arg1) 0.75^n                    uicolortext ^"/^" 0xBFBFBF 0.6^n                    uicolortext (servinfomaxplayers $arg1) 0xBFBFBF 0.55^n                ]^n            ]^n        ]^n    ]^n"
UIsettip = " uihover [ [.@[uiname]_tip] = $arg1 ] "
UIstddialog = "^n    newui $arg1 [^n        uispace 0.025 0 [^n            uiclamp 1 1 1 1^n            UIbox ^"^" 0 0 [ uiclamp 1 1 1 1 ]^n        ]^n        uispace 0 $UI_window_padding [^n            uihlist 0 [^n                uifill 0 0.065 [^n                    uialign -2 -1^n                    UIbuttonarea ^"^" 0.05 0.05 [^n                        uialign -2 1^n                        local s ; s = (uihold? 0.04 (uihover? 0.044 0.04))^n                        UIfastimg ^"ui/^" ^"yes^" ^"^" $s $s^n                        uirelease [ @@@@@@arg3 ; hideui $uiname ]^n                    ]^n                ]^n                @@@arg2^n                uifill 0 0.065 [^n                    uialign -2 -1^n                    UIbuttonarea ^"^" 0.05 0.05 [^n                        uialign -2 1^n                        local s ; s = (uihold? 0.04 (uihover? 0.044 0.04))^n                        UIfastimg ^"ui/^" ^"no^" ^"^" $s $s^n                        uirelease [ @@@@@@arg4 ; hideui $uiname ]^n                    ]^n                ]^n            ]^n        ]^n    ] $arg5 $arg6^n"
UItaskbarvisible = [0]
UItitlebutton_exit = [
    UIbuttonarea "hold2 0x801010 n n" 0.05 0.026 [
        UIfastimg "ui/" "ui_exit" "" 0.016 0.016
        uirelease [ hideui $uiname ]
    ]
]
UItitlebutton_mini = [
    UIbuttonarea "hold2 0x404040 n n" 0.034 0.026 [
        UIfastimg "ui/" "ui_mini" "" 0.016 0.016
        uirelease [
            if (< (indexof $.UI_taskbar $uiname) 0) [
                UI_taskbar = (concat $.UI_taskbar (escape $uiname))
            ]
            hideui $uiname
        ]
    ]
]
UItooltipbox = "^n    if (=f $arg4 0) [ arg4 = (*f $arg2 2) ]^n    local diagline ; diagline = [ uiline $c_line 0.006 0.02 ]^n    uihlist 0 [^n        uiline $c_line 0 $arg2 [ uialign 0 -1 ]^n        uivlist 0 [^n            uigroup [^n                uiscroll (+f $arg1 0.03) $arg2 [^n                    uifill $arg1 $arg2 $arg3^n                ]^n                UIbar 1 ; uialign- 0 -1 ^n            ]^n            UIbar 1^n            uihlist 0 [^n                uiclamp 1 1^n                uihlist 0.006 [^n                    diagline^n                    if (!=s (getalias [.@[uiname]_tip]) ^"^") [^n                        UIfastimg ^"ui/^" ^"ui_question^" ^"1^" 0.02 0.02^n                        uiclip 0 0.02 [ uitext $[.@[uiname]_tip] 0.5 ]^n                    ] [ UIfastimg ^"ui/^" ^"ui_question^" ^"0^" 0.02 0.02 ]^n                ]^n                if (> $numargs 4) [^n                    uiclip 0 0.02 [^n                        uihlist 0.006 [^n                            arg5^n                            uifill^n                        ]^n                    ]^n                ]^n            ]^n            uioffset 0.006 0 [^n                uiclamp 1 1^n                UIbar 1^n            ]^n        ]^n        uivlist 0 [ ^n            uiclamp 0 0 1 1^n            uiline $c_line 0.01^n            uigroup [^n                diagline            ; uialign- -1^n                uiline $c_line 0.01 ; uialign-  0 1^n            ]^n        ]^n        UIvscroll 0.02 (+f $arg2 0.02) $arg4^n    ]^n"
UItriangle = [
    if $arg1 [] [ arg1 = $c_fill ]
    uigroup [
        uitriangle $arg1 $arg2 $arg3 $arg4
        uitriangleoutline $arg1 $arg2 $arg3 $arg4
    ]
]
UIvcolorslider = "^n    uigroup [^n        uivgradient $arg5 $arg4 (*f 0.75 $arg6) $arg7 [ uioutline $c_line ; uiclamp- 1 1 1 1 ]^n        uifont ^"default_outline^" [ uivlist -0.01 [^n            loop i (strlen (abs $$arg1)) [^n                uicolortext (substr $$arg1 $i 1) @@@(? (|| uihover? uihold?) 0x98FFFFFF 0x60FFFFFF) 0.7^n            ]^n        ] ]^n        uivslider $arg1 $arg2 $arg3 1 [ doargs $arg8 ] [^n            uifill $arg6 (*f 0.98 $arg7)^n            uisliderbutton [ uiline 0xFFFFFF $arg6 0 ]^n        ]^n    ]^n"
UIvscroll = [
    local arrowsize
    arrowsize = (*f $arg1 0.35)
    uivlist 0 [
        uiscrollarrow (-f 0 $arg3)
        UIbar 1
        uivscrollbar [
            uifill $arg1 $arg2 [ UIbar 0 1 ]
            uiscrollbutton [
                uiclamp 1 1
                style_button_hold5
                uiclamp* 1 1 1 1
                uispace 0 $arrowsize [
                    uiclamp 0 0 1 1
                    style_generic_linesh 3 0.004 (*f $arg1 0.5)
                    UItriangle $c_line $arrowsize $arrowsize   0 ; uialign- 0 -1
                    UItriangle $c_line $arrowsize $arrowsize 180 ; uialign- 0  1
                ]
            ]
        ]
        UIbar 1
        uiscrollarrow $arg3
    ]
]
UIvslider = [
    if $arg9 [] [ arg9 = 0.3 ]
    uivlist 0 [
        uisliderarrow -1 [ UIarrowbutton $arg5 $arg5 0 [] $arg9 ]
        uihslider $arg1 (minf $arg3 $arg2) (maxf $arg2 $arg3) $arg4 $arg8 [
            UIbox "" (-f $arg6 (*f $arg5 2)) (*f 0.75 $arg5)
            uisliderbutton [
                uifill $arg5 0.012
                style_button_hold5
                uiclamp* 1 1 1 1
                if (< $numargs 10) [
                    uispace $UI_button_padding 0 arg7
                ] arg7
            ]
        ]
        uisliderarrow 1 [ UIarrowbutton $arg5 $arg5 180 [] $arg9 ]
    ]
]
_CREDITS_category = [
    UIbox "box d d" 0 0.032 [
        uiclamp 1 1
        uispace 0.01 0 [
            uialign -1 0
            uihlist 0.01 [
                UIfastimg "" "cube" "" 0.032 0.032
                uitext $arg1 0.7
            ]
        ]
    ]
    uispace 0.03 0 [
        uifill 0 0 [
            uiclamp 1 1
            uimodhgradient 0xC0C0C0 0xFFFFFF
            uiclamp- 1 1 1 1
            uispace 0.02 0.01 [
                uialign -1 -2
                uivlist 0 [
                    looplist i $arg2 [
                        uitext (strreplace (strreplace $i "^"" "^fs^f8^"" "^"^fr") ": " "^f4: ") 0.6
                    ]
                    uialign* -1 -2
                ]
            ]
        ]
    ]
    uifill 0 0.02
]
_SCOREBOARD_cw_cn = [0.040]
_SCOREBOARD_cw_d = [0.054]
_SCOREBOARD_cw_k = [0.054]
_SCOREBOARD_cw_n = [
    -f (
        if (> $getmode 2) [*f $_SCOREBOARD_sbwteam 0.5] $_SCOREBOARD_sbwsolo
    ) (
        if (> $getmode 2) [? $showscore $_SCOREBOARD_cw_s]
    ) (
        ? $showkills $_SCOREBOARD_cw_k
    ) (
        ? $showdeaths $_SCOREBOARD_cw_d
    ) (
        if $scoreboardmultiplayer [? $showpj $_SCOREBOARD_cw_pj]
    ) (
        if $scoreboardmultiplayer [? $showping $_SCOREBOARD_cw_p]
    ) (
        if $scoreboardmultiplayer [? $showclientnum $_SCOREBOARD_cw_cn]
    ) 0.03
]
_SCOREBOARD_cw_p = [0.050]
_SCOREBOARD_cw_pj = [0.050]
_SCOREBOARD_cw_s = [0.042]
_SCOREBOARD_playertablesolo = [
    uifill 0 0 [
        uitable 0 0 [
            uitableheader [
                uifill 0.015
                uifill (_SCOREBOARD_cw_n) 0.022
                _SCOREBOARD_sbcell $showkills         $_SCOREBOARD_cw_k  0.022 "K"  0xBBCC8B 0.45 1 1
                _SCOREBOARD_sbcell $showdeaths        $_SCOREBOARD_cw_d  0.022 "D"  0xE56767 0.45 1 1
                if $scoreboardmultiplayer [
                    _SCOREBOARD_sbcell $showpj        $_SCOREBOARD_cw_pj 0.022 "PJ" 0x77A1D9 0.45 1 1
                    _SCOREBOARD_sbcell $showping      $_SCOREBOARD_cw_p  0.022 "P"  0x77A1D9 0.45 1 1
                    _SCOREBOARD_sbcell $showclientnum $_SCOREBOARD_cw_cn 0.022 "#"  0xA0A0A0 0.45 1 1
                ]
                uifill 0.015
            ] [ uicolor 0x88161616 0 0 [ uiclamp 1 1 1 1 ] ]
            _SCOREBOARD_sbtc = 0
            loopscoreboard cn 0 [
                _SCOREBOARD_sbtc = (! $_SCOREBOARD_sbtc)
                uitablerow [
                    uifill 0.015
                    _SCOREBOARD_sbcell 1                  (_SCOREBOARD_cw_n) 0.026 (getclientcolorname $cn)                   (scoreboardstatus $cn) 0.57 -1
                    _SCOREBOARD_sbcell $showkills         $_SCOREBOARD_cw_k  0.026 (getclientfrags  $cn)                      0xBBCC8B               0.52  1
                    _SCOREBOARD_sbcell $showdeaths        $_SCOREBOARD_cw_d  0.026 (getclientdeaths $cn)                      0xE56767               0.52  1
                    if $scoreboardmultiplayer [
                        _SCOREBOARD_sbcell $showpj        $_SCOREBOARD_cw_pj 0.026 (? (isai $cn) "^f4-" (scoreboardpj $cn))   0x77A1D9               0.52  1
                        _SCOREBOARD_sbcell $showping      $_SCOREBOARD_cw_p  0.026 (? (isai $cn) "^f4-" (scoreboardping $cn)) 0x77A1D9               0.52  1
                        _SCOREBOARD_sbcell $showclientnum $_SCOREBOARD_cw_cn 0.026 (? (isai $cn) "^f4-" $cn)                  0xA0A0A0               0.52  1
                    ]
                    uifill 0.015
                ] [
                    uicolor (? $_SCOREBOARD_sbtc 0x99323232 0x99262626) 0 0 [ uiclamp 1 1 1 1 ]
                    pushif highlight (scoreboardhighlight $cn) [ uioutline 0xA0A0A0 0 0.024 [ uiclamp 1 1 ] ]
                ]
            ]
        ]
    ]
]
_SCOREBOARD_playertableteam = [
    uifill 0 0 [
        uihlist 0 [
            uitable 0 0 [
                uialign 0 -1
                uitableheader [
                    uifill 0.015
                    if $scoreboardmultiplayer [
                        _SCOREBOARD_sbcell $showclientnum $_SCOREBOARD_cw_cn 0.042 "#"              0xA0A0A0 0.45 -1 1
                        _SCOREBOARD_sbcell $showping      $_SCOREBOARD_cw_p  0.042 "P"              0x77A1D9 0.45 -1 1
                        _SCOREBOARD_sbcell $showpj        $_SCOREBOARD_cw_pj 0.042 "PJ"             0x77A1D9 0.45 -1 1
                    ]
                    _SCOREBOARD_sbcell $showdeaths        $_SCOREBOARD_cw_d  0.042 "D"              0xE56767 0.45 -1 1
                    _SCOREBOARD_sbcell $showkills         $_SCOREBOARD_cw_k  0.042 "K"              0xBBCC8B 0.45 -1 1
                    _SCOREBOARD_sbcell $showscore         $_SCOREBOARD_cw_s  0.042 "Score"          0x62B370 0.45 -1 1
                    _SCOREBOARD_sbcell 1                  (_SCOREBOARD_cw_n) 0.042 (getteamscore 1) 0x4060D0 1     1
                    uifill 0.015
                ] [ uicolor 0x99202860 0 0 [ uiclamp 1 1 1 1 ] ]
                _SCOREBOARD_sbtc = 0
                loopscoreboard cn 1 [
                    _SCOREBOARD_sbtc = (! $_SCOREBOARD_sbtc)
                    uitablerow [
                        uifill 0.015
                        if $scoreboardmultiplayer [
                            _SCOREBOARD_sbcell $showclientnum $_SCOREBOARD_cw_cn 0.026 (? (isai $cn) "^f4-" $cn)                  0xA0A0A0                0.52 -1
                            _SCOREBOARD_sbcell $showping      $_SCOREBOARD_cw_p  0.026 (? (isai $cn) "^f4-" (scoreboardping $cn)) 0x77A1D9                0.52 -1
                            _SCOREBOARD_sbcell $showpj        $_SCOREBOARD_cw_pj 0.026 (? (isai $cn) "^f4-" (scoreboardpj $cn))   0x77A1D9                0.52 -1
                        ]
                        _SCOREBOARD_sbcell $showdeaths        $_SCOREBOARD_cw_d  0.026 (getclientdeaths $cn)                      0xE56767               0.52 -1
                        _SCOREBOARD_sbcell $showkills         $_SCOREBOARD_cw_k  0.026 (getclientfrags  $cn)                      0xBBCC8B               0.52 -1
                        _SCOREBOARD_sbcell $showscore         $_SCOREBOARD_cw_s  0.026 (getclientflags  $cn)                      0x62B370               0.52 -1
                        _SCOREBOARD_sbcell 1                  (_SCOREBOARD_cw_n) 0.026 (getclientcolorname $cn)                   (scoreboardstatus $cn) 0.57  1
                        uifill 0.015
                    ] [
                        uicolor (? $_SCOREBOARD_sbtc 0x99333b40 0x99262b33) 0 0 [ uiclamp 1 1 1 1 ]
                        pushif highlight (scoreboardhighlight $cn) [ uioutline 0xA0A0A0 0 0.024 [ uiclamp 1 1 ] ]
                    ]
                ]
            ]
            uitable 0 0 [
                uialign 0 -1
                uitableheader [
                    uifill 0.015
                    _SCOREBOARD_sbcell 1                  (_SCOREBOARD_cw_n) 0.042 (getteamscore 2) 0xD04040 1    -1
                    _SCOREBOARD_sbcell $showscore         $_SCOREBOARD_cw_s  0.042 "Score"          0x62B370 0.45  1 1
                    _SCOREBOARD_sbcell $showkills         $_SCOREBOARD_cw_k  0.042 "K"              0xBBCC8B 0.45  1 1
                    _SCOREBOARD_sbcell $showdeaths        $_SCOREBOARD_cw_d  0.042 "D"              0xE56767 0.45  1 1
                    if $scoreboardmultiplayer [
                        _SCOREBOARD_sbcell $showpj        $_SCOREBOARD_cw_pj 0.042 "PJ"             0x77A1D9 0.45  1 1
                        _SCOREBOARD_sbcell $showping      $_SCOREBOARD_cw_p  0.042 "P"              0x77A1D9 0.45  1 1
                        _SCOREBOARD_sbcell $showclientnum $_SCOREBOARD_cw_cn 0.042 "#"              0xA0A0A0 0.45  1 1
                    ]
                    uifill 0.015
                ] [ uicolor 0x99602020 0 0 [ uiclamp 1 1 1 1 ] ]
                _SCOREBOARD_sbtc = 0
                loopscoreboard cn 2 [
                    _SCOREBOARD_sbtc = (! $_SCOREBOARD_sbtc)
                    uitablerow [
                        uifill 0.015
                        _SCOREBOARD_sbcell 1                  (_SCOREBOARD_cw_n) 0.026 (getclientcolorname $cn)                   (scoreboardstatus $cn) 0.57 -1
                        _SCOREBOARD_sbcell $showscore         $_SCOREBOARD_cw_s  0.026 (getclientflags  $cn)                      0x62B370               0.52  1
                        _SCOREBOARD_sbcell $showkills         $_SCOREBOARD_cw_k  0.026 (getclientfrags  $cn)                      0xBBCC8B               0.52  1
                        _SCOREBOARD_sbcell $showdeaths        $_SCOREBOARD_cw_d  0.026 (getclientdeaths $cn)                      0xE56767               0.52  1
                        if $scoreboardmultiplayer [
                            _SCOREBOARD_sbcell $showpj        $_SCOREBOARD_cw_pj 0.026 (? (isai $cn) "^f4-" (scoreboardpj $cn))   0x77A1D9               0.52  1
                            _SCOREBOARD_sbcell $showping      $_SCOREBOARD_cw_p  0.026 (? (isai $cn) "^f4-" (scoreboardping $cn)) 0x77A1D9               0.52  1
                            _SCOREBOARD_sbcell $showclientnum $_SCOREBOARD_cw_cn 0.026 (? (isai $cn) "^f4-" $cn)                  0xA0A0A0               0.52  1
                        ]
                        uifill 0.015
                    ] [
                        uicolor (? $_SCOREBOARD_sbtc 0x99403333 0x99332626) 0 0 [ uiclamp 1 1 1 1 ]
                        pushif highlight (scoreboardhighlight $cn) [ uioutline 0xA0A0A0 0 0.024 [ uiclamp 1 1 ] ]
                    ]
                ]
            ]
        ]
    ]
]
_SCOREBOARD_sbcell = [
    if (arg1) [
        uifill $arg2 $arg3 [
            uicolortext $arg4 $arg5 $arg6
            uialign- $arg7 $arg8
        ]
    ]
]
_SCOREBOARD_sbheader = [
    local _SCOREBOARD_sbw
    _SCOREBOARD_sbw = (? (m_teammode $getmode) $_SCOREBOARD_sbwteam $_SCOREBOARD_sbwsolo)
    uifill 0 0.005
    uifill $_SCOREBOARD_sbw 0.05 [
        uifill (-f $_SCOREBOARD_sbw (? $showip 0.18 0)) 0 [
            uialign -1
            uiclip (-f $_SCOREBOARD_sbw (? $showip 0.18 0)) 0 [
                uialign -1
                uispace 0.01 0 [
                    uivlist 0.002 [
                        uihlist 0.006 [
                            UIfastimg "cube" "" "" 0.024 0.024
                            if $scoreboardservinfo [
                                uitext $scoreboardservinfo 0.65
                            ] [ uitext "^f4Tesseract" 0.65 ]
                        ]
                        uihlist 0.012 [
                            UIfastimg "ui/" "mm" $getmastermode 0.02 0.02
                            uitext (getmodeprettyname $getmode) 0.52
                            uitext "^f4~" 0.5
                            uitext (concatword "^f9" $scoreboardmap) 0.52
                            if (m_timed $getmode) [
                                uitext "^f4~" 0.5
                                uitext (concatword (? (|| $intermission $paused) "^f3" "^f8") $scoreboardtime) 0.52
                            ]
                        ]
                        uialign* -1
                    ]
                ]
            ]
        ]
        if (&& $scoreboardmultiplayer $showip) [
            uifill 0.16 0 [
                uialign 1
                UIbar 0 1 ; uialign- -1
                uiclip 0.16 0 [
                    uialign 1
                    uispace 0.01 0 [
                        uivlist 0.004 [
                            uicolortext $connectedip   0xA0A0A0 0.52
                            uicolortext $connectedport 0xA0A0A0 0.52
                            uialign* 1
                        ]
                    ]
                    uialign- 1
                ]
            ]
        ]
    ]
]
_SCOREBOARD_sbtc = [0]
_SCOREBOARD_sbwsolo = [0.68]
_SCOREBOARD_sbwteam = [1.18]
_SCOREBOARD_spectatorlist = [
    if $showspectators [
        uimodcolor $c_boxmod 0 0 [
            uiclamp 1 1 1 1
            uigrid (? (> $getmode 2) 3 2) 0 0 [ 
                loopscoreboard cn -1 [
                    uispace 0.01 0.01 [
                        pushif sbhigh (scoreboardhighlight $cn) [
                            uioutline 0xA0A0A0 ; uiclamp- 1 1 1 1
                        ]
                        uihlist 0.01 [
                            uicolortext (getclientcolorname $cn) (scoreboardstatus $cn) 0.57
                            if $scoreboardmultiplayer [ if $showclientnum [ uitext $cn 0.57 ] ]
                        ]
                    ]
                ]
            ]
        ]
    ]
]
actext.alpha = [1.0]
avatar = [1]
baselight = [0]
basevariants = [64]
c_boxmod = [0xDDDDDD]
c_cb0 = [0x484848]
c_cb1 = [0x48BACE]
c_diag1 = [0x80202020]
c_diag2 = [0xC0202020]
c_fill = [0xF0E8E0]
c_focus = [0xF81008]
c_grdmod = [0xB8B8B8]
c_line = [0x303030]
c_main1 = [0x282828]
c_main2 = [0x161616]
c_menu = [0x202020]
c_menu_m = [0x1C1C1C]
c_rd0 = [0x484848]
c_rd1 = [0x48BACE]
chatexec = [ inputcommand $arg1 [do      $commandbuf] "^f5[exec]^f7" s ]
chatsay = [ inputcommand $arg1 [say     $commandbuf] "^f7[all]^f7"  s ]
chatteamsay = [ inputcommand $arg1 [sayteam $commandbuf] "^f8[team]^f7" s ]
clamp = [ max  $arg2 (min  $arg3 $arg1) ]
cmd = [
    arg5 = 0 
    loopwhile i (listlen $arg1) [>= $arg5 0] [
        if ((at $arg1 $i)) [
            doargs (at $arg2 $i)
            arg5 = (+ $arg5 1)
        ] [
            doargs (at $arg3 $i)
            arg5 = -1
        ]
    ]
    if (= $arg5 (listlen $arg1)) [ doargs $arg4 ]
]
commandbuf = [est]
coop = [ if (mode 0) [ map $arg1 ] ]
copymapcfg = [
    if (&& $numargs [! $mainmenu]) [
        .cmc_from = $arg1
        .cmc_to   = (? (= $numargs 2) $arg2 $mapname)
        if (findfile (concatword "media/map/" $.cmc_from ".cfg")) [
            if (findfile (concatword "media/map/" $.cmc_to ".cfg")) [ showui "dialog_copycfg" ] [
                textfocus "#copymapcfg"
                textload (concatword "media/map/" $.cmc_from ".cfg")
                textsave (concatword "media/map/" $.cmc_to   ".cfg")
            ]
        ] [
            echo (format "^f8%1 ^f7: no such map config!" $.cmc_from)
            .cmc_from = "" ; .cmc_to = ""
        ]
    ]
]
coswave = [
	local x y 
	x = (modf (*f 180 (divf $arg1 $arg2)) 720)
	y = (+f 0.5 (*f 0.5 (cos $x)))
	if (&& $arg3 [>= $x 180] [< $x 540]) [ y = (*f $y -1) ]
	result $y
]
cp_client = [
    local selected ; selected = (>= (indexof $cnlist $arg1) 0)
    UIbuttonarea (
            ? $selected "hold1" "hold2"
        ) 0.39 0.032 [
        uirelease [
            if $selected [
                cnlist = (listdel $cnlist $arg1)
            ] [ cnlist = (concat $cnlist $arg1) ]
        ]
        uispace 0.006 0 [
            uiclamp 1 1
            uihlist 0 [
                uiclamp 1 1
                uicolortext (getclientcolorname $arg1) (scoreboardstatus $arg1) 0.55
                if $showclientnum [
                    if (isai $arg1) [
                        uitext (concatword (? $selected "^f8" "^f4") "BOT") 0.55
                    ] [ uitext (concatword (? $selected "^f8" "^f7") $arg1) 0.6 ]
                    uialign- 1
                ]
            ]
        ]
    ]

]
cp_clientpanel = [
    uifill 0.39
    looplist cn (
        listfilter i (listclients $.cci_showself) [
            && [
                if $arg2 [isspectator $i] [! (isspectator $i)]
            ] [
                case $arg1 1 [= (getclientteam $i) 1] 2 [= (getclientteam $i) 2] () 1
            ] [
                if $.cci_showbots [result 1] [! (isai $i)]
            ]
        ]
    ) [ cp_client $cn $arg1 $arg2 ]
]
cp_updateselected = [ cnlist = (listintersect $cnlist $arg1) ]
curdepthoffset = [4]
curdepthval = [depthvaloffset(4.0)]
curtap = [1]
curtapoffset = [2]
curtexval = [texvaloffset(2.0)]
deferredlighttype = [tdn8Fspab]
demo = [ stopdemo ; if (mode -1) [ map $arg1 ] ]
derivnormal = [0]
dozoom = [
    if $zoomtoggle [
        zoom (? $zoom -1 1)
    ] [
        zoom 1
        onrelease [ zoom -1 ]
    ]
]
edit = [ if (mode 0) [ map $arg1 ] ]
edittoggled = [
    if $editing [
        showui "edithud"
        if (! (uivisible "fullconsole")) [ showui "editvars" ]
    ] [
        hideui "edithud"
        hideui "editvars"
        hideui "texture_browser"
        hideui "mapmodel_browser"
    ]
]
filterdir = [y]
followplayer = [
    if $editing [
        .followlist (get!spectator $listclients)
        if (< (indexof $.followlist $.followcn) 0) [ .followcn (at $.followlist 0) ]
        if (= $.crosshairsize 0) [
            .crosshairsize $crosshairsize
            crosshairsize 0
            .followplayer 1
        ]
        sleep 1 [ goto $.followcn ; followplayer ]
    ] [
        crosshairsize $.crosshairsize
        .crosshairsize 0
        .followplayer 0
    ]
]
genusermaps = [
    usermaps ""
    loopfiles m "media/map" "ogz" [
        if (< (indexof (concat $dmmaps $testmaps) $m) 0) [
            usermaps = (concat $usermaps $m)
        ]
    ]
]
get!admin = [ listfilter i $arg1 [! (isadmin     $i)] ]
get!bots = [ listfilter i $arg1 [! (isai        $i)] ]
get!ignored = [ listfilter i $arg1 [! (isignored   $i)] ]
get!master = [ listfilter i $arg1 [! (ismaster    $i)] ]
get!spectator = [ listfilter i $arg1 [! (isspectator $i)] ]
getadmin = [ listfilter i $arg1 [isadmin     $i]]
getbots = [ listfilter i $arg1 [isai        $i]]
getignored = [ listfilter i $arg1 [isignored   $i]]
getmaster = [ listfilter i $arg1 [ismaster    $i]]
getspectator = [ listfilter i $arg1 [isspectator $i]]
gfetchprefix = [gfetch]
linear = [1]
lineardepth = [1]
mainmenutoggled = "^n    if $mainmenu [^n        music ^"sound/music/mainmenu.ogg^"^n    ] [^n        loop n 20 [^n            sleep (* $n 25) [^n                musicvol (max 0 (-f $musicvol @(divf @@musicvol 20)))^n            ]^n        ]^n        sleep 500 [^n            music ^"^"^n            musicvol @musicvol^n        ]^n    ]^n"
maxaotaps = [5]
maxsteps = [12]
maxvariants = [194]
nextspecmode = [
    if $specmode [
        specmode (mod (+ $specmode 1) 3)
    ] [
        specmode (+ (> $getfollow -1) 1)
    ]
]
notepad = [
    if $numargs [ notepadpath = $arg1 ]
    showui "notepad"
]
numlights = [8]
numrh = [0]
numsplits = [0]
numtaps = [1]
opt_ratios = [4:3 5:4 16:9 16:10]
opt_ratios_assoc = [custom custom 4:3 4:3 5:4 5:4 16:9 16:9 16:10 16:10]
packed = [1]
packeddepth = [1]
pctf = [ if (mode 6) [ map $arg1 ] ]
pdm = [ if (mode 2) [ map $arg1 ] ]
ptdm = [ if (mode 4) [ map $arg1 ] ]
rctf = [ if (mode 5) [ map $arg1 ] ]
rdm = [ if (mode 1) [ map $arg1 ] ]
reduced = [1]
reui = [
    exec "config/ui/style.cfg"         
    exec "config/ui/lib.cfg"           
    exec "config/ui/common.cfg"        
    exec "config/ui/helpers.cfg"       
    exec "config/ui/colorconvert.cfg"  
    loopfiles f "config/ui/hud" cfg [
        exec (concatword "config/ui/hud/" $f ".cfg")   
    ]
    loopfiles f "config/ui/menus" cfg [
        exec (concatword "config/ui/menus/" $f ".cfg") 
    ]
]
rtdm = [ if (mode 3) [ map $arg1 ] ]
shadername = [deferredlighttdn8Fspab]
spotlight = [1]
stat_d_pctf = [0]
stat_d_pdm = [0]
stat_d_ptdm = [0]
stat_d_rctf = [0]
stat_d_rdm = [0]
stat_d_rtdm = [0]
stat_d_total = [0]
stat_k_pctf = [0]
stat_k_pdm = [0]
stat_k_ptdm = [0]
stat_k_rctf = [0]
stat_k_rdm = [0]
stat_k_rtdm = [0]
stat_k_total = [0]
stat_r_avg = [0.0]
stat_r_pctf = [0.0]
stat_r_pdm = [0.0]
stat_r_ptdm = [0.0]
stat_r_rctf = [0.0]
stat_r_rdm = [0.0]
stat_r_rtdm = [0.0]
stat_s_pctf = [0]
stat_s_pdm = [0]
stat_s_ptdm = [0]
stat_s_rctf = [0]
stat_s_rdm = [0]
stat_s_rtdm = [0]
stat_s_total = [0]
stat_time_edit = [0]
stat_time_pctf = [0]
stat_time_pdm = [0]
stat_time_ptdm = [0]
stat_time_rctf = [0]
stat_time_rdm = [0]
stat_time_rtdm = [0]
stat_tk_pctf = [0]
stat_tk_ptdm = [0]
stat_tk_rctf = [0]
stat_tk_rtdm = [0]
stat_tk_total = [0]
stat_x_pctf = [0]
stat_x_rctf = [0]
stat_x_total = [0]
style_button_addargs = [
    cases (? (< $numargs 1) "d" $arg1) "d" [ uicolor $c_menu ] "n" [] () [ uicolor $arg1 ]
    cases (? (< $numargs 2) "d" $arg2) "d" [ uimodcolor $c_boxmod ] "n" [] () [ uimodcolor $arg2 ]
    cases (? (< $numargs 3) "d" $arg3) "d" [
        uitiledimage "media/interface/ui/ui_bg1.png" 0.006 0.006
    ] "n" [] () [
        uitiledimage (concatword "media/interface/ui/ui_" $arg3 ".png") 0.006 0.006
    ]
]
style_button_default = [ style_button_hold1 ]
style_button_hold1 = [
    do $style_button_addargs
    uihold [ style_generic_gradient1 ] [
        uihover [ style_generic_gradient2 ]
    ]
    uioutline $c_line
]
style_button_hold2 = [
    uihover [
        do $style_button_addargs
        uihold [ style_generic_gradient1 ] [
            style_generic_gradient2
        ]
        uioutline $c_line
    ]
]
style_button_hold3 = [
    do $style_button_addargs
    uihold [ style_generic_gradient1 ] [
        uieschold [ style_generic_gradient1 ] [
            uihover [ style_generic_gradient2 ]
        ]
    ]
    uioutline $c_line
]
style_button_hold4 = [
    uihover [
        do $style_button_addargs
        uihold [ style_generic_gradient1 ] [
            uieschold [ style_generic_gradient1 ] [
                style_generic_gradient2
            ]
        ]
        uioutline $c_line
    ]
]
style_button_hold5 = [
    do $style_button_addargs
    uihold [ style_generic_gradient3 ] [
        uihover [ style_generic_gradient4 ]
    ]
    uioutline $c_line
]
style_button_hold6 = [
    uihover [
        do $style_button_addargs
        uihold [ style_generic_gradient3 ] [
            style_generic_gradient4
        ]
        uioutline $c_line
    ]
]
style_button_hold7 = [
    do $style_button_addargs
    uihold [ style_generic_gradient3 ] [
        uieschold [ style_generic_gradient3 ] [
            uihover [ style_generic_gradient4 ]
        ]
    ]
    uioutline $c_line
]
style_button_hold8 = [
    uihover [
        do $style_button_addargs
        uihold [ style_generic_gradient3 ] [
            uieschold [ style_generic_gradient3 ] [
                style_generic_gradient4
            ]
        ]
        uioutline $c_line
    ]
]
style_generic_box = [
    cases (? (< $numargs 1) "d" $arg1) "d" [ uicolor $c_menu ] "n" [] () [ uicolor $arg1 ]
    cases (? (< $numargs 2) "n" $arg2) "d" [ uimodcolor $c_boxmod ] "n" [] () [ uimodcolor $arg2 ]
    cases (? (< $numargs 3) "d" $arg3) "d" [
        uitiledimage "media/interface/ui/ui_bg2.png" 0.006 0.006
    ] "n" [] () [
        uitiledimage (concatword "media/interface/ui/ui_" $arg3 ".png") 0.006 0.006
    ]
    cases (? (< $numargs 4) "d" $arg4) "d" [ uioutline $c_line ] "n" [] () [ uioutline $arg4 ]
]
style_generic_default = [ style_generic_box ]
style_generic_gradient1 = [ uimodvgradient $c_grdmod 0xFFFFFF ]
style_generic_gradient2 = [ uimodvgradient 0xFFFFFF $c_grdmod ]
style_generic_gradient3 = [ uimodhgradient $c_grdmod 0xFFFFFF ]
style_generic_gradient4 = [ uimodhgradient 0xFFFFFF $c_grdmod ]
style_generic_linesh = [
    uivlist $arg2 [
        loop i $arg1 [ uiline $c_line $arg3 ]
    ]
]
style_generic_linesv = [
    uihlist $arg2 [
        loop i $arg1 [ uiline $c_line 0 $arg3 ]
    ]
]
togglefullcon = [
    if (uivisible "fullconsole") [
       if (> $fullconsize 50) [ fullconsize 35 ] [ hideui "fullconsole" ]
    ] [ fullconsize 75 ; showui "fullconsole" ]
]
togglemainmenu = [ || hidetopui [ toggleui "main" ] ]
transparent = [0]
ums_delta = " [ums_delta_@(? $editing ^"edit^" ^"game^")_@ums_modifier] $arg1 "
ums_delta_edit_0 = [ 
    if $blendpaintmode [
        if (! (iskeyheld "B")) [ nextblendbrush $arg1 ]
    ] [ editfacewsel $arg1 1 ]
]
ums_delta_edit_1 = [ gridpower (max 0 (min 12 (+ $arg1 $gridpower) (- $mapscale 1))) ]
ums_delta_edit_11 = [ entproperty 0 $arg1 ]
ums_delta_edit_12 = [ entproperty 1 $arg1 ]
ums_delta_edit_13 = [ entproperty 2 $arg1 ]
ums_delta_edit_14 = [ entproperty 3 $arg1 ]
ums_delta_edit_15 = [ entproperty 4 $arg1 ]
ums_delta_edit_2 = [ editfacewsel $arg1 0 ]
ums_delta_edit_3 = [ editfacewsel $arg1 2 ]
ums_delta_edit_4 = [ if $blendpaintmode [ rotateblendbrush $arg1 ] [ editrotate $arg1 ] ]
ums_delta_edit_5 = [ edittex $arg1 ]
ums_delta_edit_6 = [ selecthbrush $arg1 ]
ums_delta_edit_7 = [ floatspeed (min (max (+ $floatspeed (* 50 $arg1)) 50) 5000) ]
ums_delta_edit_8 = [                                                                      
    arg1 = (+ $blendpaintmode $arg1)
    cond (< $arg1 1) [ blendpaintmode = 5 ] (> $arg1 5) [ blendpaintmode = 1 ] [ blendpaintmode $arg1 ]
]
ums_delta_game_0 = [ 
    nextweapon $arg1
]
ums_modifier = [0]
ums_multiplier = [8]
ums_setmodifier = [ ums_modifier = $arg1 ; onrelease [ ums_modifier = 0 ] ]
upscaled = [0]
volumetrictype = [Fsp]

listcomplete clearents [ 
   light mapmodel playerstart envmap particles sound spotlight decal
   teleport teledest jumppad
   flag
]
complete coop "media/map" "ogz"
complete demo "." "dmo"
complete edit "media/map" "ogz"
listcomplete editmat [air water clip glass noclip lava gameclip death nogi alpha]
listcomplete entfind [ 
   light mapmodel playerstart envmap particles sound spotlight decal
   teleport teledest jumppad
   flag
]
complete map "media/map" "ogz"
listcomplete newent [ 
   light mapmodel playerstart envmap particles sound spotlight decal
   teleport teledest jumppad
   flag
]
complete pctf "media/map" "ogz"
complete pdm "media/map" "ogz"
complete ptdm "media/map" "ogz"
complete rctf "media/map" "ogz"
complete rdm "media/map" "ogz"
complete rtdm "media/map" "ogz"
